<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title></title>
    <link href="/2024/07/22/src/src%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
    <url>/2024/07/22/src/src%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</url>
    
    <content type="html"><![CDATA[<h1 id="Src-收集流程"><a href="#Src-收集流程" class="headerlink" title="Src 收集流程"></a>Src 收集流程</h1><h2 id="获取根域名"><a href="#获取根域名" class="headerlink" title="获取根域名"></a>获取根域名</h2><ol><li><p>企查查，天眼查，小蓝本</p></li><li><p>通过网站的备案信息查询</p><p>找到一个网站，然后找到备案信息放到</p><p><a href="https://beian.miit.gov.cn/?wm=vt1#/Integrated/index">ICP&#x2F;IP地址&#x2F;域名信息备案管理系统 (miit.gov.cn)</a></p><p>查询</p></li><li><p>通过一个网站</p><p>然后使用威胁情报</p></li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>云安全</title>
    <link href="/2024/07/06/src/%E4%BA%91%E5%AE%89%E5%85%A8/"/>
    <url>/2024/07/06/src/%E4%BA%91%E5%AE%89%E5%85%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="存储桶遍历"><a href="#存储桶遍历" class="headerlink" title="存储桶遍历"></a>存储桶遍历</h1><h1 id="存储桶数据遍历"><a href="#存储桶数据遍历" class="headerlink" title="存储桶数据遍历"></a>存储桶数据遍历</h1><h1 id="ak-sk-接管"><a href="#ak-sk-接管" class="headerlink" title="ak&#x2F;sk 接管"></a>ak&#x2F;sk 接管</h1>]]></content>
    
    
    
    <tags>
      
      <tag>src</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>druid未授权访问利用</title>
    <link href="/2024/07/01/edusrc/druid%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E5%88%A9%E7%94%A8/"/>
    <url>/2024/07/01/edusrc/druid%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E5%88%A9%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="Druid"><a href="#Druid" class="headerlink" title="Druid"></a>Druid</h1><p>是一个非常好用的数据库连接池</p><h1 id="弱口令"><a href="#弱口令" class="headerlink" title="弱口令"></a>弱口令</h1><p>常见用户:admin ruoyi druid<br>常见密码:123456 12345 ruoyi admin druid admin123 admin888</p><h1 id="未授权访问"><a href="#未授权访问" class="headerlink" title="未授权访问"></a>未授权访问</h1><p>一般路径</p><p>&#x2F;druid&#x2F;index.html<br>&#x2F;druid&#x2F;index.html<br>&#x2F;prod-api&#x2F;druid&#x2F;login.html<br>&#x2F;prod-api&#x2F;druid&#x2F;index.html<br>&#x2F;dev-api&#x2F;druid&#x2F;login.html<br>&#x2F;dev-api&#x2F;druid&#x2F;index.html<br>&#x2F;api&#x2F;druid&#x2F;login.html<br>&#x2F;api&#x2F;druid&#x2F;index.html<br>&#x2F;admin&#x2F;druid&#x2F;login.html<br>&#x2F;admin-api&#x2F;druid&#x2F;login.html</p><h1 id="重点"><a href="#重点" class="headerlink" title="重点"></a>重点</h1><ol><li>url 监控</li><li>session 监控</li><li>spring 监控</li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>edusrc</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>案例</title>
    <link href="/2024/06/22/src/%E6%A1%88%E4%BE%8B/"/>
    <url>/2024/06/22/src/%E6%A1%88%E4%BE%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="越权"><a href="#越权" class="headerlink" title="越权"></a>越权</h1><h2 id="邀请加入"><a href="#邀请加入" class="headerlink" title="邀请加入"></a>邀请加入</h2><p>在这个情况下，可以直接邀请，不需要经过对方同意，就可以完成添加人员</p><blockquote><p>扩大危害：</p><p>可以邀请到自己的粉丝群，或者 </p></blockquote><h2 id="分享"><a href="#分享" class="headerlink" title="分享"></a>分享</h2><p>我们分享文件的情况下，对方不同意接受，我们还可以使对方接受</p><blockquote><p>扩大危害：</p><p>分享木马，或者违法的文件图片等</p></blockquote><h2 id="两个产品（前端越权）"><a href="#两个产品（前端越权）" class="headerlink" title="两个产品（前端越权）"></a>两个产品（前端越权）</h2><blockquote><p>场景：</p><p>有两个产品，有一个产品可以免费可以预览，另一个产品收费不可以预览</p></blockquote><blockquote><p>手法：</p><p>将免费的这个预览的参数，代码复制，收费这边通过f12 将代码替换，就可以完成</p></blockquote><h1 id="支付漏洞"><a href="#支付漏洞" class="headerlink" title="支付漏洞"></a>支付漏洞</h1><h2 id="买会员"><a href="#买会员" class="headerlink" title="买会员"></a>买会员</h2><blockquote><p>场景：</p><p>买会员，两个产品，高配置，低配置</p></blockquote><blockquote><p>手法：</p><p>先买一年便宜的，再买一年高级的会自动升杯，也就是之前那一年便宜的会自动升级</p></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>src</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>高危漏洞</title>
    <link href="/2024/06/19/src/%E9%AB%98%E5%8D%B1%E6%BC%8F%E6%B4%9E/"/>
    <url>/2024/06/19/src/%E9%AB%98%E5%8D%B1%E6%BC%8F%E6%B4%9E/</url>
    
    <content type="html"><![CDATA[<h1 id="常见的高危漏洞"><a href="#常见的高危漏洞" class="headerlink" title="常见的高危漏洞"></a>常见的高危漏洞</h1><p>1、webshell<br>2、严重的逻辑设计缺陷<br>3、严重的敏感信息泄露<br>4、&#x3D;&#x3D;拒绝服务的漏洞&#x3D;&#x3D;<br>5、存储XSS<br>6、RCE<br>7、SSRF<br>8、SQL注入<br>9、支付漏洞</p><h1 id="webshell"><a href="#webshell" class="headerlink" title="webshell"></a>webshell</h1><p>不能getshell</p><h1 id="越权"><a href="#越权" class="headerlink" title="越权"></a>越权</h1><p>越权删除</p>]]></content>
    
    
    
    <tags>
      
      <tag>src</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>支付漏洞</title>
    <link href="/2024/06/19/src/%E6%94%AF%E4%BB%98%E6%BC%8F%E6%B4%9E/"/>
    <url>/2024/06/19/src/%E6%94%AF%E4%BB%98%E6%BC%8F%E6%B4%9E/</url>
    
    <content type="html"><![CDATA[<h1 id="支付漏洞的根本"><a href="#支付漏洞的根本" class="headerlink" title="支付漏洞的根本"></a>支付漏洞的根本</h1><ol><li><p>低价充值，越权花别人的钱</p></li><li><p>相同的价格获得更多的东西</p><p>比如获取到更长的特权时间</p></li><li><p>支付密码绕过</p></li></ol><h1 id="负数购买"><a href="#负数购买" class="headerlink" title="负数购买"></a>负数购买</h1><p>就是使用余额购买东西的场景下，将数量改成-2 这样的话，如果余额增加了说明存在这个漏洞</p><h1 id="恶意锁库存"><a href="#恶意锁库存" class="headerlink" title="恶意锁库存"></a>恶意锁库存</h1><p>生成订单库存没有了，应该是付款了之后才会减少</p><h1 id="修改内容"><a href="#修改内容" class="headerlink" title="修改内容"></a>修改内容</h1><p>提交订单的时候修改订单上的服务，再生成订单</p><h1 id="修改金额"><a href="#修改金额" class="headerlink" title="修改金额"></a>修改金额</h1><p>生成订单的包或者支付的包</p><ul><li>负数付款金额减少</li><li>小数点迁移</li><li>购买隐藏的</li></ul><h1 id="无限重放-并发"><a href="#无限重放-并发" class="headerlink" title="无限重放&#x2F;并发"></a>无限重放&#x2F;并发</h1><ul><li>退款重放</li></ul><h1 id="正负叠加"><a href="#正负叠加" class="headerlink" title="正负叠加"></a>正负叠加</h1><p>多个商品的时候，将商品价格更改为正负，然后使结果为正数</p><p>防止后端检验商品的价格</p><h1 id="溢出"><a href="#溢出" class="headerlink" title="溢出"></a>溢出</h1><p>98998996172801</p>]]></content>
    
    
    
    <tags>
      
      <tag>src</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>越权漏洞</title>
    <link href="/2024/06/10/src/%E6%9D%83%E9%99%90%E6%BC%8F%E6%B4%9E/"/>
    <url>/2024/06/10/src/%E6%9D%83%E9%99%90%E6%BC%8F%E6%B4%9E/</url>
    
    <content type="html"><![CDATA[<h1 id="重点关注"><a href="#重点关注" class="headerlink" title="重点关注"></a>重点关注</h1><ol><li><p>收货地址</p><p>这个点还可以测试是否可以并发添加，xss等</p><p>增删改查</p></li><li><p>用户</p></li><li><p>编辑</p></li><li><p>预览</p></li><li><p>报告</p></li><li><p>订单</p></li></ol><h1 id="绕过方法"><a href="#绕过方法" class="headerlink" title="绕过方法"></a>绕过方法</h1><ol><li><p>修改到只有id 和 token 的状态，然后重放</p><p>删除其余的参数</p></li><li><p>如果发现网站一闪而过到了sso </p><p>可以尝试抓住包不放，或者drop 掉让你跳转的数据包</p><p>或者是直接禁用js</p><p>可以造成未授权访问</p></li><li><p>需要多条地址</p><p>有可能在一些情况下，必须有一个保留的数据</p></li><li><p>双因子绕过</p><p>可以通过其他方式进行获取，比如可以使用评论之内的查看</p></li><li><p>通过url 中的参数进行越权</p></li><li><p>findsomething 中找id 值或者其他的值进行越权</p><p>比如发现了一个接口可以尝试进行访问</p></li><li><p>如果发现旧密码填错了也可以进行更改数据</p><p>就可以尝试越权修改密码 -》 任意用户密码重置 &#x2F; csrf</p></li><li><p>如果使用手机号进行鉴权的</p><p>可以尝试爆破测试手机号</p></li><li><p>子主账号越权</p><p>使用高权限的接口和低权限的接口进行越权</p></li></ol><h1 id="常见的id-越权"><a href="#常见的id-越权" class="headerlink" title="常见的id 越权"></a>常见的id 越权</h1><h2 id="出现位置"><a href="#出现位置" class="headerlink" title="出现位置"></a>出现位置</h2><ol><li>收货地址</li><li>用户信息</li><li>编辑</li><li>预览（草稿 回收站）</li><li>报告（采购）</li><li>订单（抽奖  付款）</li></ol><h2 id="漏洞挖掘"><a href="#漏洞挖掘" class="headerlink" title="漏洞挖掘"></a>漏洞挖掘</h2><ol><li>修改id</li></ol><h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><ol><li>常见的id 类越权</li></ol><h2 id="绕过方式"><a href="#绕过方式" class="headerlink" title="绕过方式"></a>绕过方式</h2><ol><li><p>删除其他的字段</p><p>删除多余的字段</p></li><li><p>cookie 可遍历的越权</p></li><li></li></ol><h1 id="未授权访问漏洞"><a href="#未授权访问漏洞" class="headerlink" title="未授权访问漏洞"></a>未授权访问漏洞</h1><h2 id="出现位置-1"><a href="#出现位置-1" class="headerlink" title="出现位置"></a>出现位置</h2><ol><li>404&#x2F;403 页面</li><li>登录口</li><li>直接扫描</li></ol><h2 id="漏洞挖掘-1"><a href="#漏洞挖掘-1" class="headerlink" title="漏洞挖掘"></a>漏洞挖掘</h2><ol><li><p>登录一个账号，然后将所有经过的url 记录下来，再进行访问</p></li><li><p>findsomething 进行查找</p></li><li><p>google hack 语法</p><p>针对不同网站搜索的资料是不一样的，比如说招聘类的网站的话，可以查找pdf 查保单之内的东西</p></li><li><p>直接扫目录</p></li><li><p>nday</p></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>src</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>任意用户类漏洞</title>
    <link href="/2024/06/09/src/%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7%E7%B1%BB%E6%BC%8F%E6%B4%9E/"/>
    <url>/2024/06/09/src/%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7%E7%B1%BB%E6%BC%8F%E6%B4%9E/</url>
    
    <content type="html"><![CDATA[<p>如果在某一个功能点存在下面的漏洞，可能其他功能点都存在这个漏洞</p><h1 id="四（六）位验证码可爆破"><a href="#四（六）位验证码可爆破" class="headerlink" title="四（六）位验证码可爆破"></a>四（六）位验证码可爆破</h1><h2 id="出现的位置"><a href="#出现的位置" class="headerlink" title="出现的位置"></a>出现的位置</h2><ol><li>只要是发短信的都可能存在</li></ol><h2 id="挖掘方法-尝试底频率爆破"><a href="#挖掘方法-尝试底频率爆破" class="headerlink" title="挖掘方法    尝试底频率爆破"></a>挖掘方法    尝试底频率爆破</h2><h1 id="验证码回显"><a href="#验证码回显" class="headerlink" title="验证码回显"></a>验证码回显</h1><h2 id="挖掘方法"><a href="#挖掘方法" class="headerlink" title="挖掘方法"></a>挖掘方法</h2><ol><li>就直接看返回包</li></ol><h2 id="变形"><a href="#变形" class="headerlink" title="变形"></a>变形</h2><p>出现在需要邀请码的情况下，当我们使用一个错误的邀请码，抓包对面回了一个正确的验证码，或者是返回的是正确的返回包的验证码</p><h1 id="只验证了验证码，没有验证绑定"><a href="#只验证了验证码，没有验证绑定" class="headerlink" title="只验证了验证码，没有验证绑定"></a>只验证了验证码，没有验证绑定</h1><p>简单的说就是拿别人的验证码，自己使用</p><h1 id="修改返回包"><a href="#修改返回包" class="headerlink" title="修改返回包"></a>修改返回包</h1><p>bp 修改返回的状态</p><p>可以将返回包改为</p><p>可以修改状态码</p><p>false -&gt; success true </p><p>400  -&gt;  200 0 1 -1</p><h1 id="发送验证码双写"><a href="#发送验证码双写" class="headerlink" title="发送验证码双写"></a>发送验证码双写</h1><p>比如</p><p>mobile &#x3D; a,b,c </p><p>或者是</p><p>mobile &#x3D;a&amp;mobile &#x3D;b </p><p>有些时候甚至可以在接受到code </p><p>然后携带着code 进行请求</p><p>mobile&#x3D;a,b,c&amp;code&#x3D;6722..</p><p>在任何阶段都可以进行，不仅仅是发送验证码</p><h1 id="第三方登录"><a href="#第三方登录" class="headerlink" title="第三方登录"></a>第三方登录</h1><p>拦截返回包</p><p>比如使用qq&#x3D;111 进行认证，截取返回包然后修改为qq&#x3D;222 进行认证</p><h1 id="随意的验证码"><a href="#随意的验证码" class="headerlink" title="随意的验证码"></a>随意的验证码</h1><p>就是随便一个验证码都能能够实现功能</p><h1 id="验证码为null-或者不写"><a href="#验证码为null-或者不写" class="headerlink" title="验证码为null 或者不写"></a>验证码为null 或者不写</h1><p>   或者是将验证码改为永真</p><p>true</p><p>1</p><p>等</p><h1 id="短信发送时绕过"><a href="#短信发送时绕过" class="headerlink" title="短信发送时绕过"></a>短信发送时绕过</h1><p>我们本身接受验证码之后，重置别人的 账号</p><p>本质就是当我们修改密码的时候，前端会显示请输入（用户名&#x2F;手机号&#x2F;邮箱），这种多个因素可以实现的情况</p><p>我们输入用户名，然后他会调用发验证码的模块，我们抓包修改为我们自己的手机号和验证码</p><p>如果可以将别人的账号修改，就是这个漏洞</p><h1 id="用户名枚举"><a href="#用户名枚举" class="headerlink" title="用户名枚举"></a>用户名枚举</h1><p>如果出现了使用用户名登录的情况下，可以尝试验证用户名枚举</p><h1 id="手机号泄露"><a href="#手机号泄露" class="headerlink" title="手机号泄露"></a>手机号泄露</h1><p>尝试一个用户，他响应包中可能会出现手机号</p><h1 id="重置链接可预测"><a href="#重置链接可预测" class="headerlink" title="重置链接可预测"></a>重置链接可预测</h1><h1 id="sql-注入-万能密码"><a href="#sql-注入-万能密码" class="headerlink" title="sql 注入&#x2F;万能密码"></a>sql 注入&#x2F;万能密码</h1><h1 id="js-验证"><a href="#js-验证" class="headerlink" title="js 验证"></a>js 验证</h1><p>本质就是，在登录口的前端页面中将会出现正确的密码，把正确的密码写在了前端的代码里面</p><p>一般出现在到登录口只有账号的密码的情况下</p><h1 id="任意中的任意"><a href="#任意中的任意" class="headerlink" title="任意中的任意"></a>任意中的任意</h1><h2 id="出现位置"><a href="#出现位置" class="headerlink" title="出现位置"></a>出现位置</h2><ol><li><p>修改水印，将属于自己的水印，在返回包中修改成别人的 </p></li><li><p>修改绑定</p></li><li><p>任意注册</p><p>就是没有其他的验证，只是使用用户名进行创建用户</p></li><li><p>账号接管</p><p>在修改用户名的情况下，不允许修改为已经存在的用户的用户名</p><p>前端随便输入一个不存在的，抓包修改为已经存在的哪一个用户，然后本账号如果能接管存在的账号，则有该漏洞</p></li><li><p>图形化验证码绕过</p><p>本质就是多次使用已经使用过的验证码</p></li></ol><h1 id="登录口"><a href="#登录口" class="headerlink" title="登录口"></a>登录口</h1>]]></content>
    
    
    
    <tags>
      
      <tag>src</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>简单的捡漏漏洞</title>
    <link href="/2024/05/11/src/%E7%AE%80%E5%8D%95%E7%9A%84%E6%8D%A1%E6%BC%8F%E6%BC%8F%E6%B4%9E/"/>
    <url>/2024/05/11/src/%E7%AE%80%E5%8D%95%E7%9A%84%E6%8D%A1%E6%BC%8F%E6%BC%8F%E6%B4%9E/</url>
    
    <content type="html"><![CDATA[<ol><li><p>dig</p><ul><li><p>测试邮箱</p><blockquote><p>swaks –body “钓鱼邮件测试” –header “Subject:钓鱼测试” -t @163.com -f  “<a href="mailto:&#x74;&#x65;&#115;&#116;&#64;&#x62;&#97;&#x69;&#x64;&#117;&#x2e;&#x63;&#x6f;&#109;">&#x74;&#x65;&#115;&#116;&#64;&#x62;&#97;&#x69;&#x64;&#117;&#x2e;&#x63;&#x6f;&#109;</a>“</p></blockquote></li><li><p>测试dns 域传送</p><p>首先</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-keyword">dig </span>ns 根域名<br></code></pre></td></tr></table></figure><p>然后根据</p><p><img src="https://allinit-1317182407.cos.ap-nanjing.myqcloud.com/src/image-20240511005640488.png" alt="image-20240511005640488"></p><p>中</p><p><img src="https://allinit-1317182407.cos.ap-nanjing.myqcloud.com/src/image-20240511005705421.png" alt="image-20240511005705421"></p><p>部分做测试</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">dig</span> axfr <span class="hljs-variable">@dns</span> 根域名<br></code></pre></td></tr></table></figure></li></ul></li><li><p>go 语言内存泄露</p><p>使用web 目录扫描工具进行扫描的过程中如果出现了</p><p>&#x2F;debug&#x2F;pprof&#x2F;</p><p>路径，可以尝试访问</p></li><li><p>url 跳转</p><ol><li><p>出现在返回某一个url 时</p><p>当退出的时候触发了某一个这个漏洞，如果改了域名之后是302 说明是存在该漏洞</p><p>绕过技巧</p><p>原本是：?logout&#x3D;<a href="http://www.source.com/">http://www.source.com</a></p><blockquote><p>?logout&#x3D;<a href="http://www.test.com/">http://www.test.com</a></p><p>?logout&#x3D;<a href="http://www.test.com/">www.test.com</a></p><p>?logout&#x3D;&#x2F;<a href="http://www.test.com/">www.test.com</a></p><p>?logout&#x3D;&#x2F;&#x2F;<a href="http://www.test.com/">www.test.com</a></p><p>?logout&#x3D;&#x2F;&#x2F;&#x2F;<a href="http://www.test.com/">www.test.com</a></p><p>?logout&#x3D;.test.com</p><p>?logout&#x3D;.test</p><p>?logout&#x3D;<a href="http://www.source.com@http//www.test.com">http://www.source.com@http://www.test.com</a></p><p>?logout&#x3D;<a href="http://www.source.com/http://www.test.com">http://www.source.com\http://www.test.com</a></p><p>?logout&#x3D;<a href="http://www.source.com///http://www.test.com">http://www.source.com\\\http://www.test.com</a></p><p>?logout&#x3D;<a href="http://www.source.com/?http://www.test.com">http://www.source.com?http://www.test.com</a></p><p>?logout&#x3D;<a href="http://www.source.com/#http://www.test.com">http://www.source.com#http://www.test.com</a></p><p>?logout&#x3D;<a href="http://www.source.com/%0a/test.com">http://www.source.com/%0a/test.com</a></p><p>?logout&#x3D;<a href="http://www.source.com/%5c%5ctest.com/%252e%252e%252f">http://www.source.com/%5c%5ctest.com/%252e%252e%252f</a></p></blockquote></li><li><p>除了上面提到的这个，还有可能出现，给一个url 然后服务器会将这个制作成二维码，二维码扫描时候才进行url 跳转</p></li><li><p>非301 url 跳转类型</p><p>本质是使用js 或者html 跳转进行，这个时候包会显示200 而不是301</p></li></ol></li><li><p>并发</p><ul><li><p>并发点赞</p></li><li><p>突破限购</p></li><li><p>只要是有次数限制你的，就可以尝试使用并发看是否被突破</p></li></ul></li><li><p>图片验证码dos</p><p>点击图片验证码，获取更新验证码的包，然后尝试拼接隐藏参数</p><p>h，w，height，wight等</p><p>size</p><p>高</p><blockquote><p>height, altitude, elevation, highness, tallness, stature, high</p></blockquote><p>宽</p><blockquote><p>width, breadth, span, extent, dimensions, wideness, girth</p></blockquote><p><img src="https://allinit-1317182407.cos.ap-nanjing.myqcloud.com/src/image-20240519141645770.png" alt="image-20240519141645770"></p></li><li><p>任意用户漏洞</p><ul><li>任意用户注册</li><li>任意用户登录</li><li>任意用户密码充值</li><li>任意用户注销</li></ul><p>这些漏洞都可以基于短信，比如同时发多条相同的短信可以被认证</p></li><li><p>短信验证码</p><ul><li><p>直接写在返回包中</p></li><li><p>可以把同一个短信验证码发到多个手机号中</p><blockquote><p><a href="http://www.xxx.com/?phone=13344556677">http://www.xxx.com?phone=13344556677</a><br>修改为：http:&#x2F;<a href="http://www.xxx.com/?phone=13344556677,14444444444">www.xxx.com?phone=13344556677,14444444444</a> </p></blockquote><p>使用逗号进行隔开</p></li><li><p>四位数短信验证码可以爆破</p></li></ul></li><li><p>findsomething</p><p>查看是否又sk ak 之类的东西</p></li><li><p>二维码类</p><ul><li><p>接口遍历</p><p>当扫描二维码活的时候会获取一个url 这个url 中可能存在关键的参数，如果发现是ak,sk,key,password等字样，可以尝试利用</p></li><li><p>xss</p><p>看扫描二维码是否是会返回信息输出到前端，如果发下有返回到前端的信息可以尝试利用xss</p></li><li><p>图片dos</p><p>就是可以修改图片的大小然后进行输出</p></li><li><p>伪造二维码进行钓鱼</p><p>如果发现是登录只需要关注二维码，不在进行二次验证的情况下可以尝试钓鱼伪造</p></li></ul></li><li><p>登录框</p></li></ol><ul><li><p>未授权api </p><p>将findsomething 中的path 导入bp</p><ol><li><p>405</p><p>如果发现get 方式是405 可以尝试访问其他方式</p><p>特别的是options 可以请求服务器获取可能用于访问的方法</p></li><li><p>参数缺失</p><p>可能根据访问前端页面中，寻找对对应的参数和拼接请求</p></li><li><p>403 bypass</p></li></ol></li></ul><ol start="11"><li><p>地图api </p><blockquote><p>(web.body&#x3D;”webapi.amap.com”||web.body&#x3D;”api.map.baidu.com”||web.body&#x3D;”apis.map.qq.com”||web.body&#x3D;”map.qq.com&#x2F;api&#x2F;js?v&#x3D;”)&amp;&amp;domain.suffix&#x3D;”<strong>根域名替换</strong>“</p><p>fofa：(body&#x3D;”webapi.amap.com”||body&#x3D;”api.map.baidu.com”||body&#x3D;”apis.map.qq.com”||body&#x3D;”map.qq.com&#x2F;api&#x2F;js?v&#x3D;”)&amp;&amp;domain&#x3D;”<strong>根域名替换</strong>“</p><p>钟馗之眼：(Banner:”webapi.amap.com” Banner:”api.map.baidu.com” Banner:”map.qq.com&#x2F;api”)+site:”<strong>根域名替换</strong>“</p><p>360QUAKE:domain:”<strong>根域名替换</strong>“ AND (response: “webapi.amap.com” OR response: “api.map.baidu.com” OR response: “map.qq.com”)</p></blockquote><blockquote><p>高德webapi：<a href="https://webapi.amap.com/v3/direction/walking?origin=116.434307,39.90909&destination=116.434446,39.90816&key=%E8%BF%99%E9%87%8C%E5%86%99key">https://webapi.amap.com/v3/direction/walking?origin=116.434307,39.90909&amp;destination=116.434446,39.90816&amp;key=这里写key</a></p><p>高德jsapi：<a href="https://restapi.amap.com/v3/geocode/regeo?key=**%E8%BF%99%E9%87%8C%E5%86%99key**&s=rsv3&location=116.434446,39.90816&callback=jsonp_258885_&platform=JS">https://restapi.amap.com/v3/geocode/regeo?key=**这里写key**&amp;s=rsv3&amp;location=116.434446,39.90816&amp;callback=jsonp_258885_&amp;platform=JS</a></p><p>高德小程序定位：<a href="https://restapi.amap.com/v3/geocode/regeo?key=**%E8%BF%99%E9%87%8C%E5%86%99key**&location=117.19674,39.14784&extensions=all&s=rsx&platform=WXJS&appname=c589cf63f592ac13bcab35f8cd18f495&sdkversion=1.2.0&logversion=2.0">https://restapi.amap.com/v3/geocode/regeo?key=**这里写key**&amp;location=117.19674%2C39.14784&amp;extensions=all&amp;s=rsx&amp;platform=WXJS&amp;appname=c589cf63f592ac13bcab35f8cd18f495&amp;sdkversion=1.2.0&amp;logversion=2.0</a></p><p>百度webapi：<a href="https://api.map.baidu.com/place/v2/search?query=ATM%E6%9C%BA&tag=%E9%93%B6%E8%A1%8C&region=%E5%8C%97%E4%BA%AC&output=json&ak=**%E8%BF%99%E9%87%8C%E5%86%99key">https://api.map.baidu.com/place/v2/search?query=ATM机&amp;tag=银行&amp;region=北京&amp;output=json&amp;ak=**这里写key</a>**</p><p>百度webapiIOS版：<a href="https://api.map.baidu.com/place/v2/search?query=ATM%E6%9C%BA&tag=%E9%93%B6%E8%A1%8C&region=%E5%8C%97%E4%BA%AC&output=json&ak=%E8%BF%99%E9%87%8C%E5%86%99key=iPhone7,2&mcode=com.didapinche.taxi&os=12.5.6">https://api.map.baidu.com/place/v2/search?query=ATM机&amp;tag=银行&amp;region=北京&amp;output=json&amp;ak=这里写key=iPhone7%2C2&amp;mcode=com.didapinche.taxi&amp;os=12.5.6</a></p><p>腾讯webapi： <a href="https://apis.map.qq.com/ws/place/v1/search?keyword=%E9%85%92%E5%BA%97&boundary=nearby(39.908491,116.374328,1000)&key=%E8%BF%99%E9%87%8C%E5%86%99key">https://apis.map.qq.com/ws/place/v1/search?keyword=酒店&amp;boundary=nearby(39.908491,116.374328,1000)&amp;key=这里写key</a></p></blockquote></li><li><p>注册类业务</p><ul><li><p>用户名枚举</p><p>当登录的时候，他会返回某某账号已经存在，然后就可以知道哪些用户是已经存在的</p><p>用户名枚举不仅仅存在于注册，在登录，重置，注销等都可能出现</p></li><li><p>短信轰炸，邮件绕过</p><ul><li><p>逗号拼接多个账号</p><p>如111,222,333</p></li><li><p>添加@&#x2F;空格&#x2F;,&#x2F;+&#x2F;英文字母&#x2F;等垃圾字符</p><p>可以尝试绕过限制</p></li><li><p>删除xff 头&#x2F;删除cookie</p><p>可以修改为1.1.1.1 或者是127.0.0.1</p></li><li><p>并发</p></li></ul></li><li><p>存在缺陷的二级校验</p><ul><li>跳过某些二级验证逻辑</li><li>二级校验可以重复使用，或者是删除验证码，使用其他用户的验证码 还能注册</li><li>二级校验码可以爆破</li></ul></li><li><p>用户账户覆盖</p><ul><li><p>sql 截取覆盖</p><p>由于前端限制了注册的用户的姓名的长度，但是我们使用控空格，然后超过他的长度，绕过了前端限制，在后端的时候对这个字符去空格或者是sql 本身只允许某一个长度的值，我们超出的部分就会被自动截断，然后就获取了已经注册的用户名</p><blockquote><p>admin                                ;</p><p>admin                                x;</p></blockquote></li><li><p>直接覆盖，不常见</p></li></ul></li><li><p>直接抓注册成功的包，然后换一个用户尝试，如果还能注册成功说明有漏洞</p></li></ul></li><li><p>找回密码</p><p>整体的流程</p><p>发起请求 –&gt; 验证身份 –token–&gt;  token+id 进行找回密码 </p><ul><li><p>身份伪造</p><p>在获取有效的token 的时候，使用其他人的id 进行重置密码</p></li><li><p>前端欺骗</p><p>使用已经修改的包替换失败的包</p></li><li><p>流程绕过</p><p>跳过某一些步骤</p></li></ul></li><li><p>参数绑定</p><p>如果发现返回包中含有其他的参数，可以尝试进行绑定</p></li><li><p>csrf 漏洞</p><p>在收藏等界面使用抓包，然后使用bp 生成csrf poc 保存到本地，然后打开本地的html文件，如果发现如果发现收藏成功就说明存在</p></li><li><p>上传类src</p><p>有任意文件上传的地方，都有可能存在xss</p><ol><li><p>任意文件上传</p><p>然后进行钓鱼</p></li><li><p>上传类xss</p><p>使用pdfxss，svgxss，htmlxss还有xmlxss</p></li></ol></li><li><p>优惠卷场景</p><ol><li><p>领取</p><ul><li>并发领卷</li><li>重放领卷</li><li>遍历领卷</li><li>越权领卷</li></ul></li><li><p>使用</p><p>并发使用，一卷多用</p><p>遍历领取隐藏的卷</p><p>越权领取别人的卷</p><p>过期的卷</p><p>未到时间的卷</p></li></ol></li><li><p>任意用户注册</p><ul><li>可覆盖</li><li>不可覆盖</li></ul><p>短信验证码可以多个手机号使用</p><p>验证码可以被爆破</p></li><li><p>短信轰炸类漏洞的绕过</p><ol><li>直接并发</li><li>使用攻击模块 添加%20或者添加空格</li><li>前面添加+86 或者空格</li><li>双写phone</li><li>后置双写</li></ol></li><li><p>电商漏洞</p><ol><li>购买不能买的</li><li>匿名漏洞，就是匿名的评价或者..</li></ol></li><li><p>签约漏洞</p><p>新用户买vip 可以享受打折，第二个月就会恢复原价</p><ul><li><p>并发进行买新用户的会员</p></li><li><p>在付款的时候使用微信生成一个订单，不支付</p><p>再使用支付宝生成个订单</p><p>两个同时支付，如果能支付上，就是签约漏洞</p></li><li><p>重放，生成多个数据包</p></li></ul></li><li><p>目录内容，信息泄露</p><p>就是通过访问某一个路径，但是出现了目录下的文件名就是</p><p>挖掘方法</p><ul><li>intext:index of</li></ul><p>主要是看这个路径下有没有敏感信息</p></li><li><p>文件泄露</p><p>出现某一个路径下出现了.ds_store</p><p>或者出现了htacess</p><p>其他泄露</p><p>1、druid未授权访问漏洞<br>ip&#x2F;druid&#x2F;index.html ##Druid Index<br>ip&#x2F;druid&#x2F;sql.html##Druid sql!监控页面<br>ip&#x2F;druid&#x2F;weburi.html#Druid Web URI!监控页面<br>ip&#x2F;druid&#x2F;websession.html##Druid Web Session.监控页面<br>json:ip&#x2F;druid&#x2F;weburi.json ##Druid Web URI json<br>ip&#x2F;druid&#x2F;websession.json ##Druid Web Session json<br>Druid登录接口：ip&#x2F;druid&#x2F;login.html#Druid登录认证页面Druid:未授权访问路径<br>2、其他泄漏<br>&#x2F;debug&#x2F;pprof&#x2F;cmdline<br>&#x2F;.DS_Store<br>&#x2F;.git&#x2F;index&#x2F;<br>.svn&#x2F;entries<br>&#x2F;graphql<br>&#x2F;tenant<br>&#x2F;sources<br>&#x2F;actuator&#x2F;env&#x2F;<br>&#x2F;swagger-ui.html</p><p>系统文件泄露</p><p>.ssh&#x2F;authorized</p><p>.bash_history</p><p>其他泄露</p><p>sql 语句泄露</p><p>日志文件泄露</p><p>xxl-job 反弹shell</p></li><li><p>jwt</p><p>在authorization 字段中有一个<code>eyj</code>开头的字段</p><ol><li>修改hearder 部分算法使用none</li><li>只保留第一段和第二段</li></ol></li><li><p>host 碰撞</p><p>不是漏洞，只是一种方式</p></li><li><p>用户名枚举</p><p>只要是能进行用户名判断的就可以进行尝试</p><p>还可以结合到验证码来，如果验证码不失效</p></li><li><p>xss  </p><p>绕过阿里的waf</p><p><img src="https://allinit-1317182407.cos.ap-nanjing.myqcloud.com/src/image-20240626200605998.png" alt="image-20240626200605998"></p><p>可以将xss 脚本放到阿里的云存储桶里面</p></li><li><p>上传xlsx 文件的地方</p><p>可以在上传之前修改为zip 然后修改里面的包，xxe 部分，然后修改回来</p><p>再次上传</p><p><a href="https://cloud.tencent.com/developer/article/1668912">漏洞笔记（二）|利用Excel进行XXE攻击-腾讯云开发者社区-腾讯云 (tencent.com)</a></p></li><li><p>条件竞争</p><p>案例：</p><p>购买车票的情况下，只能买一次</p><p>可以先抓一个购买的包，然后再多点击几次，等到最后一起放，就可以造成条件竞争</p><p>案例2：</p><p>关注xxx </p><p>多个账号</p></li><li><p>评论区</p><p>标签可控，就是评论的时候。使用html标签</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&lt;img <span class="hljs-attribute">srv</span>=<span class="hljs-string">&quot;url&quot;</span>&gt;<br></code></pre></td></tr></table></figure></li><li><p>getshell</p><p>webshell - ueditor nday</p></li><li><p>泄露</p><ul><li><p>.git 泄露</p><p>跑不出源码也提</p></li><li><p>.svn&#x2F;entries</p><p>svn 泄露</p></li><li><p>ds_store </p><p>文件泄露</p></li><li><p>.htaccess</p><p>泄露</p></li></ul></li><li><p>sql 语句泄露</p><p>查询的时候，让程序报错，不一定存在sql 注入漏洞，但是可能报错出现sql 语句</p></li><li><p>日志泄露</p></li><li><p>xxl-job 命令执行</p></li><li><p>ssrf</p><p>只要是又url 参数的地方都可以进行测试</p><p>富文本的上传图片的地方，可以尝试是否存在ssrf</p></li><li><p>邮箱轰炸</p><p>可以尝试使用xff 进行绕过</p></li><li><p>如果遇到了php 的地方</p><p>可以尝试fuzz 参数</p></li><li><p>如果发现了参数是一个id</p><p>或者什么，原本是13</p><p>可以尝试14-1</p><p>mysql会自己进行更改</p></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>src</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>OAuth</title>
    <link href="/2024/03/25/src/OAuth/"/>
    <url>/2024/03/25/src/OAuth/</url>
    
    <content type="html"><![CDATA[<h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><ol><li><p>准备两个账号，两个浏览器</p><p>首先抓账号A的认证包，然后将这个包，在登录B的浏览器上，访问这个url 如果发现被绑定，那么就存在该漏洞</p></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>src</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>商城类</title>
    <link href="/2024/03/24/src/%E5%95%86%E5%9F%8E%E7%B1%BB/"/>
    <url>/2024/03/24/src/%E5%95%86%E5%9F%8E%E7%B1%BB/</url>
    
    <content type="html"><![CDATA[<h1 id="部分思路"><a href="#部分思路" class="headerlink" title="部分思路"></a>部分思路</h1><ol><li><p>查找测试商品或者是隐藏商品</p><ul><li><p>测试商品</p><p>主要是</p></li><li><p>隐藏商品</p><p>主要是一切打折扣的东西，但是由于现在没有折扣了，但是能正常的访问，并且购买</p><p>衍生出来就是一些赠品</p></li></ul></li><li><p>获取了商品测试修改大商品赠送</p><p>比如修改包的时候，修改赠送商品的id，就可以</p></li><li><p>尝试优惠卷复用</p></li><li><p>还有就是抓支付的包</p></li><li><p>如果存在支付漏洞，看能否换取积分，有可能被风控之后不给商品，可以刷积分</p></li></ol><h1 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h1><ol><li>根据网络查找接口</li></ol><p>   <img src="https://allinit-1317182407.cos.ap-nanjing.myqcloud.com/src/%E5%95%86%E5%9F%8E%E7%B1%BB/image-20240324230838792.png" alt="image-20240324230838792"></p><p>   根据怀疑的接口进行重放</p><p>   <img src="https://allinit-1317182407.cos.ap-nanjing.myqcloud.com/src/%E5%95%86%E5%9F%8E%E7%B1%BB/image-20240324231003973.png" alt="image-20240324231003973"></p>]]></content>
    
    
    
    <tags>
      
      <tag>src</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>src</title>
    <link href="/2024/03/20/src/src/"/>
    <url>/2024/03/20/src/src/</url>
    
    <content type="html"><![CDATA[<h1 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h1><p>遇到一个点，怎么判断是漏洞点呢？</p><blockquote><p>数据，破坏，权限</p></blockquote><p>如果和这3个词相关，那就很大的可能是一个漏洞</p>]]></content>
    
    
    
    <tags>
      
      <tag>src</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>捡漏技巧</title>
    <link href="/2024/03/03/src/%E6%8D%A1%E6%BC%8F%E6%8A%80%E5%B7%A7/"/>
    <url>/2024/03/03/src/%E6%8D%A1%E6%BC%8F%E6%8A%80%E5%B7%A7/</url>
    
    <content type="html"><![CDATA[<h1 id="网络空间搜索引擎"><a href="#网络空间搜索引擎" class="headerlink" title="网络空间搜索引擎"></a>网络空间搜索引擎</h1><ol><li>使用hunter edu </li><li>fofa 打企业比较好（个人）</li></ol><h1 id="针对于edu"><a href="#针对于edu" class="headerlink" title="针对于edu"></a>针对于edu</h1><ol><li><p>hack 语法</p><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elm"><span class="hljs-title">inurl</span>:<span class="hljs-string">&quot;edu.cn&quot;</span> intext:<span class="hljs-string">&quot;身份证&quot;</span>  file<span class="hljs-keyword">type</span>:xls<br></code></pre></td></tr></table></figure><p>主要是filetype 里面的隐私信息</p></li><li><p>github </p><p>通过使用 <code>&quot;&quot;</code></p><p>来准确收集</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c"><span class="hljs-string">&quot;.mail&quot;</span> <span class="hljs-string">&quot;password&quot;</span><br></code></pre></td></tr></table></figure></li><li><p>dirsearch </p><p>必须使用字典</p></li><li><p>绕过403</p><p><img src="https://allinit-1317182407.cos.ap-nanjing.myqcloud.com/%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98/%E6%8D%A1%E6%BC%8F%E6%8A%80%E5%B7%A7/image-20240303205635773.png" alt="image-20240303205635773"></p></li></ol><h1 id="逻辑漏洞"><a href="#逻辑漏洞" class="headerlink" title="逻辑漏洞"></a>逻辑漏洞</h1><ol><li><p>抓包，改包</p></li><li><p>四舍五入体现或者支付</p><p>通过抓包1.001如果会变成2的话就出现了漏洞</p><p>原理：</p><p>后端没有对精度做出仔细的检查</p><p>可能出现的地方</p><ul><li>转账</li><li>充值vip 天数</li><li>凭证获取，如果变成1.1 获取了2 的权限，那么也证明漏洞存在</li></ul></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>src</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2024/02/14/src/%E6%9D%82%E8%AE%B0/"/>
    <url>/2024/02/14/src/%E6%9D%82%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="遇到的方法集合"><a href="#遇到的方法集合" class="headerlink" title="遇到的方法集合"></a>遇到的方法集合</h1><ol><li><p>能获取api 接口的情况之下，获取用户信息</p></li><li><p>文件上传漏洞，但是智能上传pdf </p><p>可以考虑上传svg,html,pdf 这个能执行js 脚本，可以实现储存型xss</p></li><li><p>在登陆界面，尝试修改密码，看看是否可以修改其他人的密码 </p></li><li><p>获取验证码是否存在短信轰炸漏洞</p></li><li><p>如果发现登录失败多少次就不能登录，然后又找到了大量的账号，就可以错误密码登录，导致大量用户不能登录</p></li><li><p>前端信息收集</p><p>打开调试器，然后打开搜素</p><blockquote><p>一些关键词</p><p>accesskey</p><p>security</p><p>ak</p><p>sk</p><p>password</p><p>username</p><p>&#x2F;*</p><p>&#x2F;&#x2F;</p></blockquote></li><li><p>前端欺骗</p><p>在浏览器-网络</p><p>中如果发现有些关键词通过更改就可以访问</p></li></ol><h1 id="文章记录方式"><a href="#文章记录方式" class="headerlink" title="文章记录方式"></a>文章记录方式</h1><blockquote><p>漏洞产生点<br>漏洞类型<br>漏洞利用方式<br>问题解决方式</p></blockquote><h1 id="XSS"><a href="#XSS" class="headerlink" title="XSS"></a>XSS</h1><p>都说xss 是捡漏，但是捡漏也是漏洞</p><ol><li><p>发现会请求图片<br>构造xss<br>通过修改http_host部分</p><p><img src="https://allinit-1317182407.cos.ap-nanjing.myqcloud.com/others/1049983-20221205120119915-1550751559.jpg" alt="img"><img src="https://allinit-1317182407.cos.ap-nanjing.myqcloud.com/others/1049983-20221205120120690-217287024.jpg" alt="img"></p><p><img src="https://allinit-1317182407.cos.ap-nanjing.myqcloud.com/others/1049983-20221205120121286-2038736915.jpg" alt="img"></p></li><li><p>payload </p><blockquote><p><a href="https://github.com/payloadbox/xss-payload-list/blob/master/Intruder/xss-payload-list.txt">https://github.com/payloadbox/xss-payload-list/blob/master/Intruder/xss-payload-list.txt</a></p></blockquote></li></ol><h1 id="逻辑漏洞"><a href="#逻辑漏洞" class="headerlink" title="逻辑漏洞"></a>逻辑漏洞</h1><h2 id="越权"><a href="#越权" class="headerlink" title="越权"></a>越权</h2><h3 id="平行越权"><a href="#平行越权" class="headerlink" title="平行越权"></a>平行越权</h3><ol><li><p>通过api 查看是否存在平行越权</p><p>能否看到其他</p></li><li><p>get </p><p>get 会存更多的平行越权</p></li></ol><h3 id="垂直越权"><a href="#垂直越权" class="headerlink" title="垂直越权"></a>垂直越权</h3><ol><li><p>重点关注post 和cookie</p><p>通过修改参数就能达到权限越权</p></li></ol><h1 id="身份验证"><a href="#身份验证" class="headerlink" title="身份验证"></a>身份验证</h1><h2 id="出现的场景"><a href="#出现的场景" class="headerlink" title="出现的场景"></a>出现的场景</h2><ol><li>登录框</li><li>注册表单</li><li>忘记密码</li></ol><h2 id="测试方法"><a href="#测试方法" class="headerlink" title="测试方法"></a>测试方法</h2><h3 id="sql-万能密码"><a href="#sql-万能密码" class="headerlink" title="sql 万能密码"></a>sql 万能密码</h3><ol><li><p>尝试admin &#x2F;123456 等用户的方式，然后观察输出的信息</p><ul><li>是否出现不存在该用户</li><li>密码错误</li></ul></li><li><p>若发现了Admin</p><p>尝试万能密码能否绕过</p></li></ol><h3 id="登录框爆破"><a href="#登录框爆破" class="headerlink" title="登录框爆破"></a>登录框爆破</h3><ol><li><p>可以尝试使用bp 自带的，只有字母进行爆破用户名，前提是验证码复用</p><p>设置字母1，2，3位就差不多了</p></li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>sql挖掘技巧</title>
    <link href="/2024/01/09/src/sql%E6%8C%96%E6%8E%98%E6%8A%80%E5%B7%A7/"/>
    <url>/2024/01/09/src/sql%E6%8C%96%E6%8E%98%E6%8A%80%E5%B7%A7/</url>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>漏洞挖掘不像是渗透，挖掘不需要打穿，点到为止就可以了，写这个的原因是，学习怎么挖掘sql漏洞</p><p>但是挖掘漏洞之前都必须要实现一下 网站的正常功能</p><h1 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h1><p>不管是漏洞挖掘还是渗透测试，最重要的都是信息收集</p><p>主要的方法就是</p><ol><li><p>网络空间搜索引擎（对edu有奇效）</p></li><li><p>谷歌搜索语法</p><blockquote><p>about.php?cartID&#x3D;<br>accinfo.php?cartld&#x3D;<br>acclogin.php?cartID&#x3D;<br>add.php?bookid&#x3D;<br>add_cart.php?num&#x3D;<br>addcart.php?addltem.php add-to-cart.php?ID&#x3D;<br>addToCart.php?idProduct&#x3D;<br>addtomylist.php?Prodld&#x3D;<br>adminEditProductFields.php?intProdID&#x3D;<br>advSearch_h.php?idCategory&#x3D;<br>affiliate.php?ID&#x3D;<br>affiliate-agreement.cfm?storeid&#x3D;<br>affiliates.php?id&#x3D;<br>ancillary.php?ID&#x3D;<br>archive.php?id&#x3D;<br>article.php?id&#x3D;<br>phpx?PagelD basket.php?id&#x3D;<br>Book.php?bookID&#x3D;<br>book_list.php?bookid&#x3D;<br>book_view.php?bookid&#x3D;<br>BookDetails.php?ID&#x3D;<br>browse.php?catid&#x3D;</p></blockquote></li><li><p>添加单引号。确认是否存在SQL注入漏洞</p></li><li><p>xss payload </p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/payloadbox/</span>xss-payload-list<span class="hljs-regexp">/blob/m</span>aster<span class="hljs-regexp">/Intruder/</span>xss-payload-list.txt<br><br></code></pre></td></tr></table></figure></li></ol><h1 id="挖掘步骤"><a href="#挖掘步骤" class="headerlink" title="挖掘步骤"></a>挖掘步骤</h1><ol><li><p>确定和数据库交互的点</p></li><li><p>判断是否是伪静态</p><p>发现如果是静态的网页那就不用注入了</p></li><li><p>判断是否存在可以利用的关键参数</p><p>优先关注id 等参数</p><p>版本号或者是时间的话，概率不大</p></li><li><p>手工注入或者是工具注入</p></li></ol><h1 id="手工注入"><a href="#手工注入" class="headerlink" title="手工注入"></a>手工注入</h1><p><img src="https://allinit-1317182407.cos.ap-nanjing.myqcloud.com/src/sql%E6%8C%96%E6%8E%98%E6%8A%80%E5%B7%A7/image-20240320113010458.png" alt="image-20240320113010458"></p><ol><li><p>明确请求方式</p><p>请求方式可以查看，关键参数</p><ul><li><p>get</p><p>url</p></li><li><p>post</p><p>请求正文</p></li></ul></li><li><p>尝试注入参数是否可行</p></li><li><p>尝试referer参数&#x2F;XFF</p></li><li><p>尝试cookie 和Usert-Agent</p></li></ol><h1 id="技巧"><a href="#技巧" class="headerlink" title="技巧"></a>技巧</h1><h2 id="伪静态网站"><a href="#伪静态网站" class="headerlink" title="伪静态网站"></a>伪静态网站</h2><p>常见的伪静态网站，将参数藏入url 中</p><p>比如</p><blockquote><p>xxx&#x2F;search&#x2F;xxx</p></blockquote><p>这个就是一个搜索功能，就可以测试是否存在</p><p>如果是使用sql-map的话，这种url 就必须在参数的位置添加*</p><p>比如</p><blockquote><p>-u   “xxx&#x2F;search&#x2F;1*&#x2F;asdfasdf”</p></blockquote><p>他就会让你判断是否shi</p>]]></content>
    
    
    
    <tags>
      
      <tag>src</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>vscode+platformIO</title>
    <link href="/2023/10/23/%E6%8A%80%E6%9C%AF%E9%9A%8F%E7%AC%94/vscode-platformIO/"/>
    <url>/2023/10/23/%E6%8A%80%E6%9C%AF%E9%9A%8F%E7%AC%94/vscode-platformIO/</url>
    
    <content type="html"><![CDATA[<ol start="5"><li><h1 id="搭建vscode-platformIO"><a href="#搭建vscode-platformIO" class="headerlink" title="搭建vscode+platformIO"></a>搭建vscode+platformIO</h1><p>针对win10 x64系统</p><h2 id="下载vscode"><a href="#下载vscode" class="headerlink" title="下载vscode"></a>下载vscode</h2><p><a href="https://code.visualstudio.com/Download">Download Visual Studio Code - Mac, Linux, Windows</a></p><p>安装的时候看情况勾选</p><p><img src="https://allinit-1317182407.cos.ap-nanjing.myqcloud.com/others/image-20231119214653752.png" alt="image-20231119214653752"></p><p>首先安装中文插件</p><p><img src="https://allinit-1317182407.cos.ap-nanjing.myqcloud.com/others/image-20231119215924740.png" alt="image-20231119215924740"></p><h2 id="安装python-环境"><a href="#安装python-环境" class="headerlink" title="安装python 环境"></a>安装python 环境</h2><p>点击安装程序即可，记得添加到path</p><h2 id="使用pip命令下载"><a href="#使用pip命令下载" class="headerlink" title="使用pip命令下载"></a>使用pip命令下载</h2><blockquote><p>pip install platformIO</p></blockquote><h2 id="安装Vscode-platformIO插件"><a href="#安装Vscode-platformIO插件" class="headerlink" title="安装Vscode platformIO插件"></a>安装Vscode platformIO插件</h2><p><img src="https://allinit-1317182407.cos.ap-nanjing.myqcloud.com/others/image-20231119215800242.png" alt="image-20231119215800242"></p><h2 id="设置vscode"><a href="#设置vscode" class="headerlink" title="设置vscode"></a>设置vscode</h2><p><img src="https://allinit-1317182407.cos.ap-nanjing.myqcloud.com/others/image-20231119215518044.png" alt="image-20231119215518044"></p><p>添加下面的代码，记得填写自己的路径</p><p><img src="https://allinit-1317182407.cos.ap-nanjing.myqcloud.com/others/image-20231119215617569.png" alt="image-20231119215617569"></p><h2 id="使用vscode-打开这个项目"><a href="#使用vscode-打开这个项目" class="headerlink" title="使用vscode 打开这个项目"></a>使用vscode 打开这个项目</h2></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>技术随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>vs2019配置win32汇编环境</title>
    <link href="/2023/07/15/%E6%8A%80%E6%9C%AF%E9%9A%8F%E7%AC%94/vs2019%E9%85%8D%E7%BD%AEwin32%E6%B1%87%E7%BC%96/"/>
    <url>/2023/07/15/%E6%8A%80%E6%9C%AF%E9%9A%8F%E7%AC%94/vs2019%E9%85%8D%E7%BD%AEwin32%E6%B1%87%E7%BC%96/</url>
    
    <content type="html"><![CDATA[<h1 id="使用vs2019搭建win32汇编环境"><a href="#使用vs2019搭建win32汇编环境" class="headerlink" title="使用vs2019搭建win32汇编环境"></a>使用vs2019搭建win32汇编环境</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>写本博客的目的是记录搭建环境遇到的问题</p><h2 id="下载MSAM32"><a href="#下载MSAM32" class="headerlink" title="下载MSAM32"></a>下载MSAM32</h2><p>下载[点击这里](<a href="http://www.masm32.com/">MASM32 SDK</a>)</p><ol><li><p>Download</p><p><img src="https://pictuures-1317182407.cos.ap-chengdu.myqcloud.com/undefinedimage-20230715222749647.png" alt="image-20230715222749647"></p></li><li><p>随便选择一个下载</p><p><img src="https://pictuures-1317182407.cos.ap-chengdu.myqcloud.com/undefinedimage-20230715222908268.png" alt="image-20230715222908268"></p></li><li><p>点开</p><p><img src="https://pictuures-1317182407.cos.ap-chengdu.myqcloud.com/undefinedimage-20230715223032741.png" alt="image-20230715223032741"></p></li><li><p>使用360解压（狗头）</p><p><img src="https://pictuures-1317182407.cos.ap-chengdu.myqcloud.com/undefinedimage-20230715223116691.png" alt="image-20230715223116691"></p></li><li><p>点击install</p><p><img src="https://pictuures-1317182407.cos.ap-chengdu.myqcloud.com/undefinedimage-20230715223156640.png" alt="image-20230715223156640"></p></li><li><p>选择C盘，把C盘喂红</p><p><img src="https://pictuures-1317182407.cos.ap-chengdu.myqcloud.com/undefinedimage-20230715223338098.png" alt="image-20230715223338098"></p></li><li><p>后面就是确定和yes</p></li></ol><h2 id="vs2019"><a href="#vs2019" class="headerlink" title="vs2019"></a>vs2019</h2><p>请自行下载</p><h2 id="配置路径"><a href="#配置路径" class="headerlink" title="配置路径"></a>配置路径</h2><ol><li><p>打开vs2019 -&gt; 新建项</p><p><img src="https://pictuures-1317182407.cos.ap-chengdu.myqcloud.com/undefinedimage-20230715223503454.png" alt="image-20230715223503454"></p></li><li><p>选择空项目</p><p><img src="https://pictuures-1317182407.cos.ap-chengdu.myqcloud.com/undefinedimage-20230715223534962.png" alt="image-20230715223534962"></p></li><li><p>修改项目名称</p><p><img src="https://pictuures-1317182407.cos.ap-chengdu.myqcloud.com/undefinedimage-20230715223644549.png" alt="image-20230715223644549"></p></li><li><p>右键项目名称，按照以下步骤</p><p><img src="https://pictuures-1317182407.cos.ap-chengdu.myqcloud.com/undefinedimage-20230715224501649.png" alt="image-20230715224501649"></p><p><img src="https://pictuures-1317182407.cos.ap-chengdu.myqcloud.com/undefinedimage-20230715224532772.png" alt="image-20230715224532772"></p></li></ol><h2 id="新建项目"><a href="#新建项目" class="headerlink" title="新建项目"></a>新建项目</h2><p>注意使用asm后缀</p><p><img src="https://pictuures-1317182407.cos.ap-chengdu.myqcloud.com/undefinedimage-20230715230205264.png" alt="image-20230715230205264"></p><h2 id="添加include"><a href="#添加include" class="headerlink" title="添加include"></a>添加include</h2><p>接下来配置include路径</p><p><img src="https://pictuures-1317182407.cos.ap-chengdu.myqcloud.com/undefinedimage-20230715225848736.png" alt="image-20230715225848736"></p><p><img src="https://pictuures-1317182407.cos.ap-chengdu.myqcloud.com/undefined20200413202327305.png" alt="在这里插入图片描述"></p><p>记得加分号</p><p><img src="https://pictuures-1317182407.cos.ap-chengdu.myqcloud.com/undefinedimage-20230715230637167.png" alt="image-20230715230637167"></p><p><img src="https://pictuures-1317182407.cos.ap-chengdu.myqcloud.com/undefinedimage-20230715230809572.png" alt="image-20230715230809572"></p><h2 id="最后的最后如果发现ml-exe错误"><a href="#最后的最后如果发现ml-exe错误" class="headerlink" title="最后的最后如果发现ml.exe错误"></a>最后的最后如果发现ml.exe错误</h2><p>请你降低你的msvc的版本，最好低于14.26</p><p><img src="https://pictuures-1317182407.cos.ap-chengdu.myqcloud.com/undefinedimage-20230715230844141.png" alt="image-20230715230844141"></p><h2 id="如果都还是不行"><a href="#如果都还是不行" class="headerlink" title="如果都还是不行"></a>如果都还是不行</h2><p>那么请参考这个教程[<a href="https://blog.csdn.net/u010486308/article/details/105495848">(27条消息) 汇编环境搭建 Windows10 VS2019 MASM32_vs 编译masm报错_晨星_Star的博客-CSDN博客</a>]，注意一下创建的顺序</p><p>空解决方案-&gt;空项目-&gt;cpp项目（asm）后缀…..</p>]]></content>
    
    
    
    <tags>
      
      <tag>技术随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>汉诺塔（java详解）</title>
    <link href="/2023/04/22/%E6%9C%89%E8%B6%A3%E9%97%AE%E9%A2%98/%E6%B1%89%E8%AF%BA%E5%A1%94%E9%97%AE%E9%A2%98/"/>
    <url>/2023/04/22/%E6%9C%89%E8%B6%A3%E9%97%AE%E9%A2%98/%E6%B1%89%E8%AF%BA%E5%A1%94%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h2 id="汉诺塔（java详解）"><a href="#汉诺塔（java详解）" class="headerlink" title="汉诺塔（java详解）"></a>汉诺塔（java详解）</h2><blockquote><p>汉诺塔（Tower of Hanoi），又称河内塔，是一个<strong>源于印度古老传说的益智玩具</strong>，由<a href="https://baike.sogou.com/lemma/ShowInnerLink.htm?lemmaId=43048">法国</a>数学家<a href="https://baike.sogou.com/lemma/ShowInnerLink.htm?lemmaId=10856155&ss_c=ssc.citiao.link">爱德华·卢卡斯</a>于1883年发明。[<a href="https://baike.sogou.com/v112111.htm#quote1">1]</a></p><p>汉诺塔的玩法是将一个木桩上的圆盘转移到另外一个木桩。移动规则：1、一次只能移动一个圆盘；2、每个桩上只有最顶层的圆盘可以移动，并且所移动的圆盘只能移到空木桩上或者它要比木桩顶层已存在的圆盘小。也就是说，您不能将大圆盘置于小圆盘之上。常见的汉诺塔n&#x3D;6~10，完成转移需要2n-1步。[<a href="https://baike.sogou.com/v112111.htm#quote1">1]</a></p><p>2023年3月，中国<a href="https://baike.sogou.com/lemma/ShowInnerLink.htm?lemmaId=90332">厦门市</a>的8岁男孩郭弘奕，以单手成功完成4层汉诺塔，用时4.305秒。经世界纪录认证（WRCA）官方审核，郭弘奕成功<strong>打破“最快时间完成4层汉诺塔（单手）”世界纪录</strong>，并颁发WRCA世界纪录认证证书，载入WRCA世界纪录</p></blockquote><p>建议试玩一下</p><p><a href="https://zhangxiaoleiwk.gitee.io/h.html">汉诺塔游戏 (gitee.io)</a></p><h2 id="采取递归的思想"><a href="#采取递归的思想" class="headerlink" title="采取递归的思想"></a>采取递归的思想</h2><h3 id="分问题"><a href="#分问题" class="headerlink" title="分问题"></a>分问题</h3><ol><li><p>大问题是如果将下面的移动到目标住</p></li><li><p>小问题无论上面的怎么移动的</p><p><img src="https://pictuures-1317182407.cos.ap-chengdu.myqcloud.com/%E6%B1%89%E8%AF%BA%E5%A1%94.jpg?q-sign-algorithm=sha1&q-ak=AKID7qYtcmaPDNWCKxozPPdDE0517O7ehey2M1NECRTwSWNxA4nHb-YQ9LX1f2pC2Db5&q-sign-time=1682487873;1682491473&q-key-time=1682487873;1682491473&q-header-list=host&q-url-param-list=&q-signature=50ec3af63cdd6cf9027d485573fecf691e8d103b&x-cos-security-token=R0yVxpoEtWEbY64skY2nK1JbodWjnMVa4ab6c42671f6150aa05f0be5d32cef89y2rMC0fuFrvgsrtQk3tJJTtJ-IGlAh7jnC6KvkLJLs39hkENmCkx0cukjZT_ICfqhZGsEB9_Zak7jUMt1oiDWoE_xgBbp0UtsLRAboL3ZCHbii3XR-esNLVFjPoWQ2TLtAp7atOXCv7-hL284gvsn2wxJU0egLeQ-msv1AAM0Cye3L3h5iKtePNVahVwSVk9"></p></li></ol><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.Scanner;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        Scanner input= <span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br>        su.func(input.nextInt(),<span class="hljs-string">&#x27;A&#x27;</span>,<span class="hljs-string">&#x27;B&#x27;</span>,<span class="hljs-string">&#x27;C&#x27;</span>);<span class="hljs-comment">//第一次C是目标住</span><br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">su</span>&#123;<br>    <span class="hljs-comment">/*public*/</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">func</span><span class="hljs-params">(<span class="hljs-type">int</span> num,<span class="hljs-type">char</span> A,<span class="hljs-type">char</span> B,<span class="hljs-type">char</span> C)</span>&#123;<br>        <span class="hljs-keyword">if</span>(num==<span class="hljs-number">1</span>)&#123;<br>            System.out.println(A+<span class="hljs-string">&quot;---&gt;&quot;</span>+C);<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            func(num-<span class="hljs-number">1</span>,A,C,B);<span class="hljs-comment">//不管上面的怎么移动</span><br>            System.out.println(A+<span class="hljs-string">&quot;---&gt;&quot;</span>+C);<br>            func(num-<span class="hljs-number">1</span>,B,A,C);<span class="hljs-comment">//这时候A是空的，所以是我们的工具柱</span><br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>问题分享</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
