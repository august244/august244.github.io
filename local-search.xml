<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title></title>
    <link href="/2024/06/08/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AD%A6%E4%B9%A0/"/>
    <url>/2024/06/08/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="计算机学习"><a href="#计算机学习" class="headerlink" title="计算机学习"></a>计算机学习</h1><p><img src="C:\Users\12414\AppData\Roaming\Typora\typora-user-images\image-20230619202404899.png" alt="image-20230619202404899"></p><p><img src="C:\Users\12414\AppData\Roaming\Typora\typora-user-images\image-20230619204057553.png" alt="image-20230619204057553"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>简单的捡漏漏洞</title>
    <link href="/2024/05/11/src/%E7%AE%80%E5%8D%95%E7%9A%84%E6%8D%A1%E6%BC%8F%E6%BC%8F%E6%B4%9E/"/>
    <url>/2024/05/11/src/%E7%AE%80%E5%8D%95%E7%9A%84%E6%8D%A1%E6%BC%8F%E6%BC%8F%E6%B4%9E/</url>
    
    <content type="html"><![CDATA[<ol><li><p>dig</p><ul><li><p>测试邮箱</p><blockquote><p>swaks –body “钓鱼邮件测试” –header “Subject:钓鱼测试” -t @163.com -f  “<a href="mailto:&#x74;&#101;&#x73;&#116;&#64;&#98;&#x61;&#x69;&#100;&#x75;&#x2e;&#99;&#111;&#109;">&#x74;&#101;&#x73;&#116;&#64;&#98;&#x61;&#x69;&#100;&#x75;&#x2e;&#99;&#111;&#109;</a>“</p></blockquote></li><li><p>测试dns 域传送</p><p>首先</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-keyword">dig </span>ns 根域名<br></code></pre></td></tr></table></figure><p>然后根据</p><p><img src="https://allinit-1317182407.cos.ap-nanjing.myqcloud.com/src/image-20240511005640488.png" alt="image-20240511005640488"></p><p>中</p><p><img src="https://allinit-1317182407.cos.ap-nanjing.myqcloud.com/src/image-20240511005705421.png" alt="image-20240511005705421"></p><p>部分做测试</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">dig</span> axfr <span class="hljs-variable">@dns</span> 根域名<br></code></pre></td></tr></table></figure></li></ul></li><li><p>go 语言内存泄露</p><p>使用web 目录扫描工具进行扫描的过程中如果出现了</p><p>&#x2F;debug&#x2F;pprof&#x2F;</p><p>路径，可以尝试访问</p></li><li><p>url 跳转</p><p>出现在返回某一个url 时</p><p>当退出的时候触发了某一个这个漏洞，如果改了域名之后是302 说明是存在该漏洞</p><p>绕过技巧</p><p>原本是：?logout&#x3D;<a href="http://www.source.com/">http://www.source.com</a></p><blockquote><p>?logout&#x3D;<a href="http://www.test.com/">http://www.test.com</a></p><p>?logout&#x3D;<a href="http://www.test.com/">www.test.com</a></p><p>?logout&#x3D;&#x2F;<a href="http://www.test.com/">www.test.com</a></p><p>?logout&#x3D;&#x2F;&#x2F;<a href="http://www.test.com/">www.test.com</a></p><p>?logout&#x3D;&#x2F;&#x2F;&#x2F;<a href="http://www.test.com/">www.test.com</a></p><p>?logout&#x3D;.test.com</p><p>?logout&#x3D;.test</p><p>?logout&#x3D;<a href="http://www.source.com@http//www.test.com">http://www.source.com@http://www.test.com</a></p><p>?logout&#x3D;<a href="http://www.source.com/http://www.test.com">http://www.source.com\http://www.test.com</a></p><p>?logout&#x3D;<a href="http://www.source.com///http://www.test.com">http://www.source.com\\\http://www.test.com</a></p><p>?logout&#x3D;<a href="http://www.source.com/?http://www.test.com">http://www.source.com?http://www.test.com</a></p><p>?logout&#x3D;<a href="http://www.source.com/#http://www.test.com">http://www.source.com#http://www.test.com</a></p><p>?logout&#x3D;<a href="http://www.source.com/%0a/test.com">http://www.source.com/%0a/test.com</a></p><p>?logout&#x3D;<a href="http://www.source.com/%5c%5ctest.com/%252e%252e%252f">http://www.source.com/%5c%5ctest.com/%252e%252e%252f</a></p></blockquote></li><li><p>并发</p><p>使用bp 插件进行爆破 </p></li><li><p>图片验证码dos</p><p>点击图片验证码，获取更新验证码的包，然后尝试拼接隐藏参数</p><p>h，w，height，wight等</p><p><img src="https://allinit-1317182407.cos.ap-nanjing.myqcloud.com/src/image-20240519141645770.png" alt="image-20240519141645770"></p></li><li><p>任意用户漏洞</p><ul><li>任意用户注册</li><li>任意用户登录</li><li>任意用户密码充值</li><li>任意用户注销</li></ul><p>这些漏洞都可以基于短信，比如同时发多条相同的短信可以被认证</p></li><li><p>短信验证码</p><ul><li><p>直接写在返回包中</p></li><li><p>可以把同一个短信验证码发到多个手机号中</p><blockquote><p><a href="http://www.xxx.com/?phone=13344556677">http://www.xxx.com?phone=13344556677</a><br>修改为：http:&#x2F;<a href="http://www.xxx.com/?phone=13344556677,14444444444">www.xxx.com?phone=13344556677,14444444444</a> </p></blockquote><p>使用逗号进行隔开</p></li><li><p>四位数短信验证码可以爆破</p></li></ul></li><li><p>findsomething</p><p>查看是否又sk ak 之类的东西</p></li><li><p>二维码类</p><ul><li><p>接口遍历</p><p>当扫描二维码活的时候会获取一个url 这个url 中可能存在关键的参数，如果发现是ak,sk,key,password等字样，可以尝试利用</p></li><li><p>xss</p><p>看扫描二维码是否是会返回信息输出到前端，如果发下有返回到前端的信息可以尝试利用xss</p></li><li><p>图片dos</p><p>就是可以修改图片的大小然后进行输出</p></li><li><p>伪造二维码进行钓鱼</p><p>如果发现是登录只需要关注二维码，不在进行二次验证的情况下可以尝试钓鱼伪造</p></li></ul></li><li><p>登录框</p></li></ol><ul><li><p>未授权api </p><p>将findsomething 中的path 导入bp</p><ol><li><p>405</p><p>如果发现get 方式是405 可以尝试访问其他方式</p><p>特别的是options 可以请求服务器获取可能用于访问的方法</p></li><li><p>参数缺失</p><p>可能根据访问前端页面中，寻找对对应的参数和拼接请求</p></li><li><p>403 bypass</p></li></ol></li></ul><ol start="11"><li><p>地图api </p><blockquote><p>(web.body&#x3D;”webapi.amap.com”||web.body&#x3D;”api.map.baidu.com”||web.body&#x3D;”apis.map.qq.com”||web.body&#x3D;”map.qq.com&#x2F;api&#x2F;js?v&#x3D;”)&amp;&amp;domain.suffix&#x3D;”<strong>根域名替换</strong>“</p><p>fofa：(body&#x3D;”webapi.amap.com”||body&#x3D;”api.map.baidu.com”||body&#x3D;”apis.map.qq.com”||body&#x3D;”map.qq.com&#x2F;api&#x2F;js?v&#x3D;”)&amp;&amp;domain&#x3D;”<strong>根域名替换</strong>“</p><p>钟馗之眼：(Banner:”webapi.amap.com” Banner:”api.map.baidu.com” Banner:”map.qq.com&#x2F;api”)+site:”<strong>根域名替换</strong>“</p><p>360QUAKE:domain:”<strong>根域名替换</strong>“ AND (response: “webapi.amap.com” OR response: “api.map.baidu.com” OR response: “map.qq.com”)</p></blockquote><blockquote><p>高德webapi：<a href="https://restapi.amap.com/v3/direction/walking?origin=116.434307,39.90909&destination=116.434446,39.90816&key=**%E8%BF%99%E9%87%8C%E5%86%99key">https://restapi.amap.com/v3/direction/walking?origin=116.434307,39.90909&amp;destination=116.434446,39.90816&amp;key=**这里写key</a>**</p><p>高德jsapi：<a href="https://restapi.amap.com/v3/geocode/regeo?key=**%E8%BF%99%E9%87%8C%E5%86%99key**&s=rsv3&location=116.434446,39.90816&callback=jsonp_258885_&platform=JS">https://restapi.amap.com/v3/geocode/regeo?key=**这里写key**&amp;s=rsv3&amp;location=116.434446,39.90816&amp;callback=jsonp_258885_&amp;platform=JS</a></p><p>高德小程序定位：<a href="https://restapi.amap.com/v3/geocode/regeo?key=**%E8%BF%99%E9%87%8C%E5%86%99key**&location=117.19674,39.14784&extensions=all&s=rsx&platform=WXJS&appname=c589cf63f592ac13bcab35f8cd18f495&sdkversion=1.2.0&logversion=2.0">https://restapi.amap.com/v3/geocode/regeo?key=**这里写key**&amp;location=117.19674%2C39.14784&amp;extensions=all&amp;s=rsx&amp;platform=WXJS&amp;appname=c589cf63f592ac13bcab35f8cd18f495&amp;sdkversion=1.2.0&amp;logversion=2.0</a></p><p>百度webapi：<a href="https://api.map.baidu.com/place/v2/search?query=ATM%E6%9C%BA&tag=%E9%93%B6%E8%A1%8C&region=%E5%8C%97%E4%BA%AC&output=json&ak=**%E8%BF%99%E9%87%8C%E5%86%99key">https://api.map.baidu.com/place/v2/search?query=ATM机&amp;tag=银行&amp;region=北京&amp;output=json&amp;ak=**这里写key</a>**</p><p>百度webapiIOS版：<a href="https://api.map.baidu.com/place/v2/search?query=ATM%E6%9C%BA&tag=%E9%93%B6%E8%A1%8C&region=%E5%8C%97%E4%BA%AC&output=json&ak=**%E8%BF%99%E9%87%8C%E5%86%99key**=iPhone7,2&mcode=com.didapinche.taxi&os=12.5.6">https://api.map.baidu.com/place/v2/search?query=ATM机&amp;tag=银行&amp;region=北京&amp;output=json&amp;ak=**这里写key**=iPhone7%2C2&amp;mcode=com.didapinche.taxi&amp;os=12.5.6</a></p><p>腾讯webapi： <a href="https://apis.map.qq.com/ws/place/v1/search?keyword=%E9%85%92%E5%BA%97&boundary=nearby(39.908491,116.374328,1000)&key=**%E8%BF%99%E9%87%8C%E5%86%99key">https://apis.map.qq.com/ws/place/v1/search?keyword=酒店&amp;boundary=nearby(39.908491,116.374328,1000)&amp;key=**这里写key</a>**</p></blockquote></li><li><p>注册类业务</p><ul><li><p>用户名枚举</p><p>当登录的时候，他会返回某某账号已经存在，然后就可以知道哪些用户是已经存在的</p><p>用户名枚举不仅仅存在于注册，在登录，重置，注销等都可能出现</p></li><li><p>短信轰炸，邮件绕过</p><ul><li><p>逗号拼接多个账号</p><p>如111,222,333</p></li><li><p>添加@&#x2F;空格&#x2F;,&#x2F;+&#x2F;英文字母&#x2F;等垃圾字符</p><p>可以尝试绕过限制</p></li><li><p>删除xff 头&#x2F;删除cookie</p><p>可以修改为1.1.1.1 或者是127.0.0.1</p></li><li><p>并发</p></li></ul></li><li><p>存在缺陷的二级校验</p><ul><li>跳过某些二级验证逻辑</li><li>二级校验可以重复使用，或者是删除验证码，使用其他用户的验证码 还能注册</li><li>二级校验码可以爆破</li></ul></li><li><p>用户账户覆盖</p><ul><li><p>sql 截取覆盖</p><p>由于前端限制了注册的用户的姓名的长度，但是我们使用控空格，然后超过他的长度，绕过了前端限制，在后端的时候对这个字符去空格或者是sql 本身只允许某一个长度的值，我们超出的部分就会被自动截断，然后就获取了已经注册的用户名</p><blockquote><p>admin                                ;</p><p>admin                                x;</p></blockquote></li><li><p>直接覆盖，不常见</p></li></ul></li><li><p>直接抓注册成功的包，然后换一个用户尝试，如果还能注册成功说明有漏洞</p></li></ul></li><li><p>找回密码</p><p>整体的流程</p><p>发起请求 –&gt; 验证身份 –token–&gt;  token+id 进行找回密码 </p><ul><li><p>身份伪造</p><p>在获取有效的token 的时候，使用其他人的id 进行重置密码</p></li><li><p>前端欺骗</p><p>使用已经修改的包替换失败的包</p></li><li><p>流程绕过</p><p>跳过某一些步骤</p></li></ul></li><li><p>参数绑定</p><p>如果发现返回包中含有其他的参数，可以尝试进行绑定</p></li><li><p>csrf 漏洞</p><p>在收藏等界面使用抓包，然后使用bp 生成csrf poc 保存到本地，然后打开本地的html文件，如果发现如果发现收藏成功就说明存在</p></li><li><p>上传类src</p><p>有任意文件上传的地方，都有可能存在xss</p><ol><li><p>任意文件上传</p><p>然后进行钓鱼</p></li><li><p>上传类xss</p><p>使用pdfxss，svgxss，htmlxss还有xmlxss</p></li></ol></li><li><p>优惠卷场景</p><ol><li><p>领取</p><ul><li>并发领卷</li><li>重放领卷</li><li>遍历领卷</li><li>越权领卷</li></ul></li><li><p>使用</p><p>并发使用，一卷多用</p><p>遍历领取隐藏的卷</p><p>越权领取别人的卷</p><p>过期的卷</p><p>未到时间的卷</p></li></ol></li><li><p>任意用户注册</p><ul><li>可覆盖</li><li>不可覆盖</li></ul><p>短信验证码可以多个手机号使用</p><p>验证码可以被爆破</p></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>src</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>OAuth</title>
    <link href="/2024/03/25/src/OAuth/"/>
    <url>/2024/03/25/src/OAuth/</url>
    
    <content type="html"><![CDATA[<h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><ol><li><p>准备两个账号，两个浏览器</p><p>首先抓账号A的认证包，然后将这个包，在登录B的浏览器上，访问这个url 如果发现被绑定，那么就存在该漏洞</p></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>src</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>商城类</title>
    <link href="/2024/03/24/src/%E5%95%86%E5%9F%8E%E7%B1%BB/"/>
    <url>/2024/03/24/src/%E5%95%86%E5%9F%8E%E7%B1%BB/</url>
    
    <content type="html"><![CDATA[<h1 id="部分思路"><a href="#部分思路" class="headerlink" title="部分思路"></a>部分思路</h1><ol><li><p>查找测试商品或者是隐藏商品</p><ul><li><p>测试商品</p><p>主要是</p></li><li><p>隐藏商品</p><p>主要是一切打折扣的东西，但是由于现在没有折扣了，但是能正常的访问，并且购买</p><p>衍生出来就是一些赠品</p></li></ul></li><li><p>获取了商品测试修改大商品赠送</p><p>比如修改包的时候，修改赠送商品的id，就可以</p></li><li><p>尝试优惠卷复用</p></li><li><p>还有就是抓支付的包</p></li><li><p>如果存在支付漏洞，看能否换取积分，有可能被风控之后不给商品，可以刷积分</p></li></ol><h1 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h1><ol><li>根据网络查找接口</li></ol><p>   <img src="https://allinit-1317182407.cos.ap-nanjing.myqcloud.com/src/%E5%95%86%E5%9F%8E%E7%B1%BB/image-20240324230838792.png" alt="image-20240324230838792"></p><p>   根据怀疑的接口进行重放</p><p>   <img src="https://allinit-1317182407.cos.ap-nanjing.myqcloud.com/src/%E5%95%86%E5%9F%8E%E7%B1%BB/image-20240324231003973.png" alt="image-20240324231003973"></p>]]></content>
    
    
    
    <tags>
      
      <tag>src</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>src</title>
    <link href="/2024/03/20/src/src/"/>
    <url>/2024/03/20/src/src/</url>
    
    <content type="html"><![CDATA[<h1 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h1><p>遇到一个点，怎么判断是漏洞点呢？</p><blockquote><p>数据，破坏，权限</p></blockquote><p>如果和这3个词相关，那就很大的可能是一个漏洞</p>]]></content>
    
    
    
    <tags>
      
      <tag>src</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>捡漏技巧</title>
    <link href="/2024/03/03/src/%E6%8D%A1%E6%BC%8F%E6%8A%80%E5%B7%A7/"/>
    <url>/2024/03/03/src/%E6%8D%A1%E6%BC%8F%E6%8A%80%E5%B7%A7/</url>
    
    <content type="html"><![CDATA[<h1 id="网络空间搜索引擎"><a href="#网络空间搜索引擎" class="headerlink" title="网络空间搜索引擎"></a>网络空间搜索引擎</h1><ol><li>使用hunter edu </li><li>fofa 打企业比较好（个人）</li></ol><h1 id="针对于edu"><a href="#针对于edu" class="headerlink" title="针对于edu"></a>针对于edu</h1><ol><li><p>hack 语法</p><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elm"><span class="hljs-title">inurl</span>:<span class="hljs-string">&quot;edu.cn&quot;</span> intext:<span class="hljs-string">&quot;身份证&quot;</span>  file<span class="hljs-keyword">type</span>:xls<br></code></pre></td></tr></table></figure><p>主要是filetype 里面的隐私信息</p></li><li><p>github </p><p>通过使用 <code>&quot;&quot;</code></p><p>来准确收集</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c"><span class="hljs-string">&quot;.mail&quot;</span> <span class="hljs-string">&quot;password&quot;</span><br></code></pre></td></tr></table></figure></li><li><p>dirsearch </p><p>必须使用字典</p></li><li><p>绕过403</p><p><img src="https://allinit-1317182407.cos.ap-nanjing.myqcloud.com/%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98/%E6%8D%A1%E6%BC%8F%E6%8A%80%E5%B7%A7/image-20240303205635773.png" alt="image-20240303205635773"></p></li></ol><h1 id="逻辑漏洞"><a href="#逻辑漏洞" class="headerlink" title="逻辑漏洞"></a>逻辑漏洞</h1><ol><li><p>抓包，改包</p></li><li><p>四舍五入体现或者支付</p><p>通过抓包1.001如果会变成2的话就出现了漏洞</p><p>原理：</p><p>后端没有对精度做出仔细的检查</p><p>可能出现的地方</p><ul><li>转账</li><li>充值vip 天数</li><li>凭证获取，如果变成1.1 获取了2 的权限，那么也证明漏洞存在</li></ul></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>src</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2024/02/14/src/%E6%9D%82%E8%AE%B0/"/>
    <url>/2024/02/14/src/%E6%9D%82%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="遇到的方法集合"><a href="#遇到的方法集合" class="headerlink" title="遇到的方法集合"></a>遇到的方法集合</h1><ol><li><p>能获取api 接口的情况之下，获取用户信息</p></li><li><p>文件上传漏洞，但是智能上传pdf </p><p>可以考虑上传svg,html,pdf 这个能执行js 脚本，可以实现储存型xss</p></li><li><p>在登陆界面，尝试修改密码，看看是否可以修改其他人的密码 </p></li><li><p>获取验证码是否存在短信轰炸漏洞</p></li><li><p>如果发现登录失败多少次就不能登录，然后又找到了大量的账号，就可以错误密码登录，导致大量用户不能登录</p></li><li><p>前端信息收集</p><p>打开调试器，然后打开搜素</p><blockquote><p>一些关键词</p><p>accesskey</p><p>security</p><p>ak</p><p>sk</p><p>password</p><p>username</p><p>&#x2F;*</p><p>&#x2F;&#x2F;</p></blockquote></li><li><p>前端欺骗</p><p>在浏览器-网络</p><p>中如果发现有些关键词通过更改就可以访问</p></li></ol><h1 id="文章记录方式"><a href="#文章记录方式" class="headerlink" title="文章记录方式"></a>文章记录方式</h1><blockquote><p>漏洞产生点<br>漏洞类型<br>漏洞利用方式<br>问题解决方式</p></blockquote><h1 id="XSS"><a href="#XSS" class="headerlink" title="XSS"></a>XSS</h1><p>都说xss 是捡漏，但是捡漏也是漏洞</p><ol><li><p>发现会请求图片<br>构造xss<br>通过修改http_host部分</p><p><img src="https://allinit-1317182407.cos.ap-nanjing.myqcloud.com/others/1049983-20221205120119915-1550751559.jpg" alt="img"><img src="https://allinit-1317182407.cos.ap-nanjing.myqcloud.com/others/1049983-20221205120120690-217287024.jpg" alt="img"></p><p><img src="https://allinit-1317182407.cos.ap-nanjing.myqcloud.com/others/1049983-20221205120121286-2038736915.jpg" alt="img"></p></li><li><p>payload </p><blockquote><p><a href="https://github.com/payloadbox/xss-payload-list/blob/master/Intruder/xss-payload-list.txt">https://github.com/payloadbox/xss-payload-list/blob/master/Intruder/xss-payload-list.txt</a></p></blockquote></li></ol><h1 id="逻辑漏洞"><a href="#逻辑漏洞" class="headerlink" title="逻辑漏洞"></a>逻辑漏洞</h1><h2 id="越权"><a href="#越权" class="headerlink" title="越权"></a>越权</h2><h3 id="平行越权"><a href="#平行越权" class="headerlink" title="平行越权"></a>平行越权</h3><ol><li><p>通过api 查看是否存在平行越权</p><p>能否看到其他</p></li><li><p>get </p><p>get 会存更多的平行越权</p></li></ol><h3 id="垂直越权"><a href="#垂直越权" class="headerlink" title="垂直越权"></a>垂直越权</h3><ol><li><p>重点关注post 和cookie</p><p>通过修改参数就能达到权限越权</p></li></ol><h1 id="身份验证"><a href="#身份验证" class="headerlink" title="身份验证"></a>身份验证</h1><h2 id="出现的场景"><a href="#出现的场景" class="headerlink" title="出现的场景"></a>出现的场景</h2><ol><li>登录框</li><li>注册表单</li><li>忘记密码</li></ol><h2 id="测试方法"><a href="#测试方法" class="headerlink" title="测试方法"></a>测试方法</h2><h3 id="sql-万能密码"><a href="#sql-万能密码" class="headerlink" title="sql 万能密码"></a>sql 万能密码</h3><ol><li><p>尝试admin &#x2F;123456 等用户的方式，然后观察输出的信息</p><ul><li>是否出现不存在该用户</li><li>密码错误</li></ul></li><li><p>若发现了Admin</p><p>尝试万能密码能否绕过</p></li></ol><h3 id="登录框爆破"><a href="#登录框爆破" class="headerlink" title="登录框爆破"></a>登录框爆破</h3><ol><li><p>可以尝试使用bp 自带的，只有字母进行爆破用户名，前提是验证码复用</p><p>设置字母1，2，3位就差不多了</p></li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>sql挖掘技巧</title>
    <link href="/2024/01/09/src/sql%E6%8C%96%E6%8E%98%E6%8A%80%E5%B7%A7/"/>
    <url>/2024/01/09/src/sql%E6%8C%96%E6%8E%98%E6%8A%80%E5%B7%A7/</url>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>漏洞挖掘不像是渗透，挖掘不需要打穿，点到为止就可以了，写这个的原因是，学习怎么挖掘sql漏洞</p><p>但是挖掘漏洞之前都必须要实现一下 网站的正常功能</p><h1 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h1><p>不管是漏洞挖掘还是渗透测试，最重要的都是信息收集</p><p>主要的方法就是</p><ol><li><p>网络空间搜索引擎（对edu有奇效）</p></li><li><p>谷歌搜索语法</p><blockquote><p>about.php?cartID&#x3D;<br>accinfo.php?cartld&#x3D;<br>acclogin.php?cartID&#x3D;<br>add.php?bookid&#x3D;<br>add_cart.php?num&#x3D;<br>addcart.php?addltem.php add-to-cart.php?ID&#x3D;<br>addToCart.php?idProduct&#x3D;<br>addtomylist.php?Prodld&#x3D;<br>adminEditProductFields.php?intProdID&#x3D;<br>advSearch_h.php?idCategory&#x3D;<br>affiliate.php?ID&#x3D;<br>affiliate-agreement.cfm?storeid&#x3D;<br>affiliates.php?id&#x3D;<br>ancillary.php?ID&#x3D;<br>archive.php?id&#x3D;<br>article.php?id&#x3D;<br>phpx?PagelD basket.php?id&#x3D;<br>Book.php?bookID&#x3D;<br>book_list.php?bookid&#x3D;<br>book_view.php?bookid&#x3D;<br>BookDetails.php?ID&#x3D;<br>browse.php?catid&#x3D;</p></blockquote></li><li><p>添加单引号。确认是否存在SQL注入漏洞</p></li><li><p>xss payload </p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/payloadbox/</span>xss-payload-list<span class="hljs-regexp">/blob/m</span>aster<span class="hljs-regexp">/Intruder/</span>xss-payload-list.txt<br><br></code></pre></td></tr></table></figure></li></ol><h1 id="挖掘步骤"><a href="#挖掘步骤" class="headerlink" title="挖掘步骤"></a>挖掘步骤</h1><ol><li><p>确定和数据库交互的点</p></li><li><p>判断是否是伪静态</p><p>发现如果是静态的网页那就不用注入了</p></li><li><p>判断是否存在可以利用的关键参数</p><p>优先关注id 等参数</p><p>版本号或者是时间的话，概率不大</p></li><li><p>手工注入或者是工具注入</p></li></ol><h1 id="手工注入"><a href="#手工注入" class="headerlink" title="手工注入"></a>手工注入</h1><p><img src="https://allinit-1317182407.cos.ap-nanjing.myqcloud.com/src/sql%E6%8C%96%E6%8E%98%E6%8A%80%E5%B7%A7/image-20240320113010458.png" alt="image-20240320113010458"></p><ol><li><p>明确请求方式</p><p>请求方式可以查看，关键参数</p><ul><li><p>get</p><p>url</p></li><li><p>post</p><p>请求正文</p></li></ul></li><li><p>尝试注入参数是否可行</p></li><li><p>尝试referer参数&#x2F;XFF</p></li><li><p>尝试cookie 和Usert-Agent</p></li></ol><h1 id="技巧"><a href="#技巧" class="headerlink" title="技巧"></a>技巧</h1><h2 id="伪静态网站"><a href="#伪静态网站" class="headerlink" title="伪静态网站"></a>伪静态网站</h2><p>常见的伪静态网站，将参数藏入url 中</p><p>比如</p><blockquote><p>xxx&#x2F;search&#x2F;xxx</p></blockquote><p>这个就是一个搜索功能，就可以测试是否存在</p><p>如果是使用sql-map的话，这种url 就必须在参数的位置添加*</p><p>比如</p><blockquote><p>-u   “xxx&#x2F;search&#x2F;1*&#x2F;asdfasdf”</p></blockquote><p>他就会让你判断是否shi</p>]]></content>
    
    
    
    <tags>
      
      <tag>src</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>vscode+platformIO</title>
    <link href="/2023/10/23/%E6%8A%80%E6%9C%AF%E9%9A%8F%E7%AC%94/vscode-platformIO/"/>
    <url>/2023/10/23/%E6%8A%80%E6%9C%AF%E9%9A%8F%E7%AC%94/vscode-platformIO/</url>
    
    <content type="html"><![CDATA[<ol start="5"><li><h1 id="搭建vscode-platformIO"><a href="#搭建vscode-platformIO" class="headerlink" title="搭建vscode+platformIO"></a>搭建vscode+platformIO</h1><p>针对win10 x64系统</p><h2 id="下载vscode"><a href="#下载vscode" class="headerlink" title="下载vscode"></a>下载vscode</h2><p><a href="https://code.visualstudio.com/Download">Download Visual Studio Code - Mac, Linux, Windows</a></p><p>安装的时候看情况勾选</p><p><img src="https://allinit-1317182407.cos.ap-nanjing.myqcloud.com/others/image-20231119214653752.png" alt="image-20231119214653752"></p><p>首先安装中文插件</p><p><img src="https://allinit-1317182407.cos.ap-nanjing.myqcloud.com/others/image-20231119215924740.png" alt="image-20231119215924740"></p><h2 id="安装python-环境"><a href="#安装python-环境" class="headerlink" title="安装python 环境"></a>安装python 环境</h2><p>点击安装程序即可，记得添加到path</p><h2 id="使用pip命令下载"><a href="#使用pip命令下载" class="headerlink" title="使用pip命令下载"></a>使用pip命令下载</h2><blockquote><p>pip install platformIO</p></blockquote><h2 id="安装Vscode-platformIO插件"><a href="#安装Vscode-platformIO插件" class="headerlink" title="安装Vscode platformIO插件"></a>安装Vscode platformIO插件</h2><p><img src="https://allinit-1317182407.cos.ap-nanjing.myqcloud.com/others/image-20231119215800242.png" alt="image-20231119215800242"></p><h2 id="设置vscode"><a href="#设置vscode" class="headerlink" title="设置vscode"></a>设置vscode</h2><p><img src="https://allinit-1317182407.cos.ap-nanjing.myqcloud.com/others/image-20231119215518044.png" alt="image-20231119215518044"></p><p>添加下面的代码，记得填写自己的路径</p><p><img src="https://allinit-1317182407.cos.ap-nanjing.myqcloud.com/others/image-20231119215617569.png" alt="image-20231119215617569"></p><h2 id="使用vscode-打开这个项目"><a href="#使用vscode-打开这个项目" class="headerlink" title="使用vscode 打开这个项目"></a>使用vscode 打开这个项目</h2></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>技术随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>二进制周报01</title>
    <link href="/2023/07/21/%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%91%A8%E6%8A%A5/%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%91%A8%E6%8A%A501/"/>
    <url>/2023/07/21/%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%91%A8%E6%8A%A5/%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%91%A8%E6%8A%A501/</url>
    
    <content type="html"><![CDATA[<h1 id="本周学习内容"><a href="#本周学习内容" class="headerlink" title="本周学习内容"></a>本周学习内容</h1><ol><li>主要集中在汇编的了解学习</li></ol><h1 id="具体学习内容"><a href="#具体学习内容" class="headerlink" title="具体学习内容"></a>具体学习内容</h1><h2 id="模式定义"><a href="#模式定义" class="headerlink" title="模式定义"></a>模式定义</h2><ol><li><p>定义了程序使用的指令集、互作模式和格式</p></li><li><p>win32环境中<code>.386</code>是必不可少的</p><p><img src="https://compilation-1317182407.cos.ap-nanjing.myqcloud.com/win32%E6%B1%87%E7%BC%96/image-20230715173340028.png" alt="image-20230715173340028"></p><p><img src="https://compilation-1317182407.cos.ap-nanjing.myqcloud.com/win32%E6%B1%87%E7%BC%96/image-20230715173449273.png" alt="image-20230715173449273"></p></li><li><p>后面带<code>p</code>则是伪指令</p></li><li><p>内存模式</p><p><img src="https://compilation-1317182407.cos.ap-nanjing.myqcloud.com/win32%E6%B1%87%E7%BC%96/image-20230715173747893.png" alt="image-20230715173747893"></p><p>但是主要使用的是<code>flat</code></p><blockquote><p>因win32程序只有一种内存模式，flat模式，没有64kb的限制</p></blockquote></li><li><p>语言模式</p><p>除了在<code>.model</code>语句中指定内存模式意以外，还应该指定语言模式</p><p><img src="https://compilation-1317182407.cos.ap-nanjing.myqcloud.com/win32%E6%B1%87%E7%BC%96/image-20230715174527757.png" alt="image-20230715174527757"></p><ul><li>stdcall的参数压栈方式是：从右往左</li></ul></li><li><p><code>option</code>语句</p><p><img src="https://compilation-1317182407.cos.ap-nanjing.myqcloud.com/win32%E6%B1%87%E7%BC%96/image-20230715175305850.png" alt="image-20230715175305850"></p></li></ol><h2 id="短的定义"><a href="#短的定义" class="headerlink" title="短的定义"></a>短的定义</h2><p><img src="https://compilation-1317182407.cos.ap-nanjing.myqcloud.com/win32%E6%B1%87%E7%BC%96/image-20230715180311206.png" alt="image-20230715180311206"></p><h3 id="数据段"><a href="#数据段" class="headerlink" title="数据段"></a>数据段</h3><p><img src="https://compilation-1317182407.cos.ap-nanjing.myqcloud.com/win32%E6%B1%87%E7%BC%96/image-20230715194544213.png" alt="image-20230715194544213"></p><ol><li><p>可读可写的已定义的变量</p><p>这些数据在<code>.data</code>的段中，是已初始化的数据段。<code>.data</code>的段存放在可执行文件的_DATA字节区内</p></li><li><p>可读可写的未定义的变量</p><p><img src="https://compilation-1317182407.cos.ap-nanjing.myqcloud.com/win32%E6%B1%87%E7%BC%96/image-20230715195000045.png" alt="image-20230715195000045"></p><p><img src="https://compilation-1317182407.cos.ap-nanjing.myqcloud.com/win32%E6%B1%87%E7%BC%96/image-20230715195240031.png" alt="image-20230715195240031"></p></li><li><p>常量</p><p><img src="https://compilation-1317182407.cos.ap-nanjing.myqcloud.com/win32%E6%B1%87%E7%BC%96/image-20230715195356997.png" alt="image-20230715195356997"></p></li></ol><h3 id="代码段"><a href="#代码段" class="headerlink" title="代码段"></a>代码段</h3><ol><li>所有的指令都在代码段里面</li><li>代码段是放在_TEXT的节区中的</li></ol><h2 id="简单知识点"><a href="#简单知识点" class="headerlink" title="简单知识点"></a>简单知识点</h2><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><ol><li><p>在代码前面写”;”，代表注释处理 </p><p><img src="https://compilation-1317182407.cos.ap-nanjing.myqcloud.com/win32%E6%B1%87%E7%BC%96/image-20230715201548889.png" alt="image-20230715201548889"></p></li></ol><h3 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h3><ol><li>由于程序的某一行过长，不利于阅读时可以使用<code>\</code>做换行符</li></ol><h3 id="调用API函数"><a href="#调用API函数" class="headerlink" title="调用API函数"></a>调用API函数</h3><p><img src="https://compilation-1317182407.cos.ap-nanjing.myqcloud.com/win32%E6%B1%87%E7%BC%96/image-20230715201811427.png" alt="image-20230715201811427"></p><p> <img src="https://compilation-1317182407.cos.ap-nanjing.myqcloud.com/win32%E6%B1%87%E7%BC%96/image-20230715201856489.png" alt="image-20230715201856489"></p><h3 id="动态链接库（dll）"><a href="#动态链接库（dll）" class="headerlink" title="动态链接库（dll）"></a>动态链接库（dll）</h3><p><img src="https://compilation-1317182407.cos.ap-nanjing.myqcloud.com/win32%E6%B1%87%E7%BC%96/image-20230715202519213.png" alt="image-20230715202519213"></p><h3 id="使用invoke语句"><a href="#使用invoke语句" class="headerlink" title="使用invoke语句"></a>使用invoke语句</h3><p><img src="https://compilation-1317182407.cos.ap-nanjing.myqcloud.com/win32%E6%B1%87%E7%BC%96/image-20230715203657995.png" alt="image-20230715203657995"></p><h3 id="API函数的返回值"><a href="#API函数的返回值" class="headerlink" title="API函数的返回值"></a>API函数的返回值</h3><p><img src="https://compilation-1317182407.cos.ap-nanjing.myqcloud.com/win32%E6%B1%87%E7%BC%96/image-20230715203928273.png" alt="image-20230715203928273"></p><ol><li><p>返回值保存在<code>eax</code>寄存器当中‘</p></li><li><p>返回值都是4个字节。</p><p>如果超出4个字节的字符串，这个时候返回的就是指针（32位下的指针是4个字节）</p></li></ol><h3 id="函数声明"><a href="#函数声明" class="headerlink" title="函数声明"></a>函数声明</h3><p><img src="https://compilation-1317182407.cos.ap-nanjing.myqcloud.com/win32%E6%B1%87%E7%BC%96/image-20230715204231533.png" alt="image-20230715204231533"><img src="https://compilation-1317182407.cos.ap-nanjing.myqcloud.com/win32%E6%B1%87%E7%BC%96/image-20230715204632946.png" alt="image-20230715204632946"></p><ol><li><p>使用<code>proto</code></p></li><li><p>距离</p><blockquote><p>win32是4G 的平坦段，无所谓距离</p><p>在Win32汇编中，函数定义时使用的距离（distance）是指函数内部的相对偏移量，用于表示函数内部的标签或指令之间的距离。</p><p>在汇编语言中，函数通常由一系列的指令组成，每个指令都有一个相对于函数起始地址的偏移量。这个偏移量被称为距离。</p></blockquote></li><li><p>对于win32汇编的参数值只有dword一种，也就是说只有4个字节</p></li></ol><h3 id="include语句"><a href="#include语句" class="headerlink" title="include语句"></a>include语句</h3><ol><li><p>包含头文件</p></li><li><p>包含的两个方式】</p><p><code>include &lt;头文件的名字&gt;</code></p><p><code>include 头文件的名字 </code></p><p><img src="https://compilation-1317182407.cos.ap-nanjing.myqcloud.com/win32%E6%B1%87%E7%BC%96/image-20230715215236758.png" alt="image-20230715215236758"></p></li></ol><h3 id="includelib"><a href="#includelib" class="headerlink" title="includelib"></a>includelib</h3><ol><li><p>导入库文件</p><p><img src="https://compilation-1317182407.cos.ap-nanjing.myqcloud.com/win32%E6%B1%87%E7%BC%96/image-20230715215645107.png" alt="image-20230715215645107"></p></li><li><p>一般库文件和动态链接库的名字相同，后缀不同</p></li><li><p>使用lib更像是一个借用，但是使用include是将文件拷贝到程序当中</p></li></ol><h3 id="宏"><a href="#宏" class="headerlink" title="宏"></a>宏</h3><p> <img src="https://compilation-1317182407.cos.ap-nanjing.myqcloud.com/win32%E6%B1%87%E7%BC%96/undefinedimage-20230716084312490.png" alt="image-20230716084312490"></p><ol><li><p>MB_OK是一个按钮，表示确定</p><p>具体的信息可以查vs的字典  </p></li><li><p>在win32汇编里面不需要使用je,jmp等</p><p>可以使用if,elseif,else </p><p><img src="https://compilation-1317182407.cos.ap-nanjing.myqcloud.com/win32%E6%B1%87%E7%BC%96/image-20230716085208255.png" alt="image-20230716085208255"></p><p><img src="https://compilation-1317182407.cos.ap-nanjing.myqcloud.com/win32%E6%B1%87%E7%BC%96/image-20230716085421317.png" alt="image-20230716085421317"></p></li></ol><h3 id="标号"><a href="#标号" class="headerlink" title="标号"></a>标号</h3><ol><li><p>可以理解为c语言的<code>goto</code></p><p><img src="https://compilation-1317182407.cos.ap-nanjing.myqcloud.com/win32%E6%B1%87%E7%BC%96/image-20230716090026683.png" alt="image-20230716090026683"></p></li><li><p>为了解决标号名称的浪费可以使用</p><p><img src="https://compilation-1317182407.cos.ap-nanjing.myqcloud.com/win32%E6%B1%87%E7%BC%96/image-20230716090405835.png" alt="image-20230716090405835"></p><p><img src="https://compilation-1317182407.cos.ap-nanjing.myqcloud.com/win32%E6%B1%87%E7%BC%96/image-20230716090423891.png" alt="image-20230716090423891"></p></li></ol><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><h4 id="全局变量"><a href="#全局变量" class="headerlink" title="全局变量"></a>全局变量</h4><ol><li><p>类型</p><p><img src="https://compilation-1317182407.cos.ap-nanjing.myqcloud.com/win32%E6%B1%87%E7%BC%96/image-20230716090725511.png" alt="image-20230716090725511"></p></li></ol><h4 id="局部变量"><a href="#局部变量" class="headerlink" title="局部变量"></a>局部变量</h4><ol><li><p>通过修改堆栈的指针<code>esp</code>来预留需要的空间</p><p>其实这个和C语言的调用是一样的</p><p><img src="https://compilation-1317182407.cos.ap-nanjing.myqcloud.com/win32%E6%B1%87%E7%BC%96/image-20230716091713070.png" alt="image-20230716091713070"></p></li><li><p>使用<code>local</code>定义局部变量</p></li><li><p>而且数据必须在代码之前 </p></li><li><p>局部变量的使用</p><p><img src="https://compilation-1317182407.cos.ap-nanjing.myqcloud.com/win32%E6%B1%87%E7%BC%96/image-20230716093250606.png" alt="image-20230716093250606"></p></li><li><p>对局部变量的初始化</p><p><code>RtlZeroMemory</code>这个API函数经行初始化</p><p><img src="https://compilation-1317182407.cos.ap-nanjing.myqcloud.com/win32%E6%B1%87%E7%BC%96/image-20230716094212170.png" alt="image-20230716094212170"></p></li></ol><h4 id="变量的使用"><a href="#变量的使用" class="headerlink" title="变量的使用"></a>变量的使用</h4><ol><li><p>强制类型转换</p><p><img src="https://compilation-1317182407.cos.ap-nanjing.myqcloud.com/win32%E6%B1%87%E7%BC%96/image-20230716095945277.png" alt="image-20230716095945277"></p></li></ol><h4 id="变量的尺寸"><a href="#变量的尺寸" class="headerlink" title="变量的尺寸"></a>变量的尺寸</h4><ol><li><p>数据的长度计算</p><p><img src="https://compilation-1317182407.cos.ap-nanjing.myqcloud.com/win32%E6%B1%87%E7%BC%96/image-20230716100100399.png" alt="image-20230716100100399"></p><p><img src="https://compilation-1317182407.cos.ap-nanjing.myqcloud.com/win32%E6%B1%87%E7%BC%96/image-20230716101511844.png" alt="image-20230716101511844"></p></li></ol><h4 id="获取变量的地址"><a href="#获取变量的地址" class="headerlink" title="获取变量的地址"></a>获取变量的地址</h4><ol><li><p>使用<code>lea</code></p><p><img src="https://compilation-1317182407.cos.ap-nanjing.myqcloud.com/win32%E6%B1%87%E7%BC%96/image-20230716102702916.png" alt="image-20230716102702916"></p></li><li><p>解析addr</p><p><img src="https://compilation-1317182407.cos.ap-nanjing.myqcloud.com/win32%E6%B1%87%E7%BC%96/image-20230716104922959.png" alt="image-20230716104922959"></p><p><img src="https://compilation-1317182407.cos.ap-nanjing.myqcloud.com/win32%E6%B1%87%E7%BC%96/image-20230716105002004.png" alt="image-20230716105002004"></p><p>在有addr的程序中，不用eax</p></li></ol><h3 id="使用子程序"><a href="#使用子程序" class="headerlink" title="使用子程序"></a>使用子程序</h3><p><img src="https://compilation-1317182407.cos.ap-nanjing.myqcloud.com/win32%E6%B1%87%E7%BC%96/image-20230716105222790.png" alt="image-20230716105222790"></p><ol><li><p>相当于函数  </p></li><li><p>参数的传递和堆栈的平衡</p><p><img src="https://compilation-1317182407.cos.ap-nanjing.myqcloud.com/win32%E6%B1%87%E7%BC%96/image-20230716105929452.png" alt="image-20230716105929452"></p><p> <img src="https://compilation-1317182407.cos.ap-nanjing.myqcloud.com/win32%E6%B1%87%E7%BC%96/image-20230716110042079.png" alt="image-20230716110042079"></p><p><img src="https://compilation-1317182407.cos.ap-nanjing.myqcloud.com/win32%E6%B1%87%E7%BC%96/image-20230716110153358.png" alt="image-20230716110153358"></p></li></ol><h3 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h3><ol><li><p>实现的语法</p><p><img src="https://compilation-1317182407.cos.ap-nanjing.myqcloud.com/win32%E6%B1%87%E7%BC%96/image-20230716111534344.png" alt="image-20230716111534344"></p><p><img src="https://compilation-1317182407.cos.ap-nanjing.myqcloud.com/win32%E6%B1%87%E7%BC%96/image-20230716111607802.png" alt="image-20230716111607802"> </p><p>例子：</p><p><img src="https://compilation-1317182407.cos.ap-nanjing.myqcloud.com/win32%E6%B1%87%E7%BC%96/image-20230716112122258.png" alt="image-20230716112122258"></p></li><li><p>实现引用</p><ul><li><p>使用点操作符</p><p><img src="https://compilation-1317182407.cos.ap-nanjing.myqcloud.com/win32%E6%B1%87%E7%BC%96/image-20230716112706165.png" alt="image-20230716112706165"></p></li><li><p><img src="https://compilation-1317182407.cos.ap-nanjing.myqcloud.com/win32%E6%B1%87%E7%BC%96/image-20230716122834546.png" alt="image-20230716122834546"></p></li><li><p>使用<code>assume</code>伪指令把寄存器预先定义为结构指针</p><p><img src="https://compilation-1317182407.cos.ap-nanjing.myqcloud.com/win32%E6%B1%87%E7%BC%96/image-20230716123018164.png" alt="image-20230716123018164"></p></li></ul></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>二进制周报</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>研发周报01</title>
    <link href="/2023/07/21/%E7%A0%94%E5%8F%91%E5%91%A8%E6%8A%A5/%E7%A0%94%E5%8F%91%E5%91%A8%E6%8A%A501/"/>
    <url>/2023/07/21/%E7%A0%94%E5%8F%91%E5%91%A8%E6%8A%A5/%E7%A0%94%E5%8F%91%E5%91%A8%E6%8A%A501/</url>
    
    <content type="html"><![CDATA[<h1 id="本周学习内容"><a href="#本周学习内容" class="headerlink" title="本周学习内容"></a>本周学习内容</h1><ol><li>主要是集中于python语言本身的学习</li></ol><h1 id="具体的学习内容"><a href="#具体的学习内容" class="headerlink" title="具体的学习内容"></a>具体的学习内容</h1><h2 id="print"><a href="#print" class="headerlink" title="print"></a>print</h2><ol><li><p>使用print</p><ul><li><p>hello world</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;hello world&quot;</span>)<br></code></pre></td></tr></table></figure><p>值得注意的是使用py的打印函数是<code>printf</code>并没有<code>f</code></p><p>py是一门脚本语言所以我们写一句话也是可以运行出结果的</p></li><li><p>字符串怕拼接</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;hello&quot;</span>+<span class="hljs-string">&quot; world&quot;</span>)<br></code></pre></td></tr></table></figure></li><li><p>换行和打印多行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&quot;&quot;床前明月光，</span><br><span class="hljs-string">疑是地上霜。 </span><br><span class="hljs-string">举头望明月，</span><br><span class="hljs-string">低头思故乡。&quot;&quot;&quot;</span>)<br></code></pre></td></tr></table></figure><p>这个是和c不同的</p></li></ul></li></ol><h2 id="赋值和创建一个变量"><a href="#赋值和创建一个变量" class="headerlink" title="赋值和创建一个变量"></a>赋值和创建一个变量</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">str</span>=<span class="hljs-string">&quot;this is a string&quot;</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">str</span>)<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><br>str1 = <span class="hljs-string">&quot;string &quot;</span><br>str2=str1<br><span class="hljs-built_in">print</span>(str1) <span class="hljs-comment"># string</span><br></code></pre></td></tr></table></figure><h2 id="运算符知识"><a href="#运算符知识" class="headerlink" title="运算符知识"></a>运算符知识</h2><ol><li><p>基本和C语言一致</p></li><li><p>不同或补充</p><ul><li><p><code>**</code>乘方符号</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-number">2</span>**<span class="hljs-number">3</span>  <span class="hljs-comment"># 2的3次方</span><br></code></pre></td></tr></table></figure></li></ul></li></ol><h2 id="导入库"><a href="#导入库" class="headerlink" title="导入库"></a>导入库</h2><ol><li><p>使用<code>import</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 例如</span><br><span class="hljs-keyword">import</span> math<br><span class="hljs-comment"># 导入math的库，这个库是与数学计算有关的库</span><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> math <span class="hljs-keyword">import</span> sin<br><span class="hljs-comment"># 从math中导入sin</span><br></code></pre></td></tr></table></figure></li></ol><h2 id="基础数据类型"><a href="#基础数据类型" class="headerlink" title="基础数据类型"></a>基础数据类型</h2><ol><li><p>字符串</p><p>基本和c++一样</p><ul><li><p><code>len</code></p><p>求字符串长度</p></li><li><p><code>[]</code></p><p>使用索引得到字符</p></li></ul></li><li><p>浮点型只有<code>float</code></p></li><li><p>布尔类型</p><p>必须是大写开始</p><p><code>True</code></p><p><code>False</code></p></li><li><p>使用type()打印当前变量的类型</p></li></ol><h2 id="获取用户的输入"><a href="#获取用户的输入" class="headerlink" title="获取用户的输入"></a>获取用户的输入</h2><ol><li><p>使用<code>input</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">int_num=<span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;请输入一个整数：&quot;</span>))<br><span class="hljs-built_in">print</span>(int_num)<br></code></pre></td></tr></table></figure><p>使用input读取用户的输入是一个string，所以我们使用int()函数转换成int才是我们需要的Int_num</p><p>同样的转换函数还有很多比如<code>float</code>等都是将</p></li></ol><h2 id="判断语句"><a href="#判断语句" class="headerlink" title="判断语句"></a>判断语句</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 判断语句</span><br><br><span class="hljs-comment"># is_true=bool(input(&quot;input bool:&quot;))</span><br>int_num=<span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;please input a num:&quot;</span>))<br><br><br><span class="hljs-keyword">if</span> int_num&lt;<span class="hljs-number">0</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&lt;0&quot;</span>)<br><span class="hljs-keyword">elif</span> <span class="hljs-number">0</span>&lt;=int_num&lt;<span class="hljs-number">100</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&lt;=0 and &lt;100&quot;</span>) <span class="hljs-comment"># 请注意判断的写法</span><br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&gt;=100&quot;</span>)<br></code></pre></td></tr></table></figure><h2 id="逻辑运算"><a href="#逻辑运算" class="headerlink" title="逻辑运算"></a>逻辑运算</h2><ol><li><p>与C语言不一样</p><ul><li><code>and</code> 与  &#x3D;&#x3D; <code>&amp;</code></li><li><code>or</code> 或 &#x3D;&#x3D;<code>|</code></li><li><code>not</code>  非 &#x3D;&#x3D;<code>!</code></li></ul><p>所谓的不同都是符号发生了变化，本质并没有很大的变化</p></li></ol><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><ol><li><p>列表是可变的</p></li><li><p>创建和使用列表</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 列表</span><br>   <br><span class="hljs-built_in">list</span>=[<span class="hljs-string">&quot;信安&quot;</span>,<span class="hljs-string">&quot;实验班&quot;</span>,<span class="hljs-string">&quot;物理网&quot;</span>,<span class="hljs-string">&quot;网工&quot;</span>]<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">list</span>)<br><span class="hljs-comment"># 添加元素</span><br><span class="hljs-built_in">list</span>.append(<span class="hljs-string">&quot;网安&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">list</span>)<br><span class="hljs-comment"># 删除元素</span><br><span class="hljs-built_in">list</span>.remove(<span class="hljs-string">&quot;网安&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">list</span>)<br><span class="hljs-comment"># 求长度</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">len</span>(<span class="hljs-built_in">list</span>))<br><span class="hljs-comment"># 通过索引得到元素</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">list</span>[<span class="hljs-number">1</span>])<br></code></pre></td></tr></table></figure></li></ol><h2 id="键值对的使用"><a href="#键值对的使用" class="headerlink" title="键值对的使用"></a>键值对的使用</h2> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs python"> <br><span class="hljs-comment"># 普通的键值对</span><br>key_value1=&#123;<span class="hljs-string">&quot;chg&quot;</span>:<span class="hljs-number">1</span>,<br>            <span class="hljs-string">&quot;zjy&quot;</span>:<span class="hljs-number">2</span>,<br>            <span class="hljs-string">&quot;test&quot;</span>:<span class="hljs-number">3</span>&#125;<br><span class="hljs-built_in">print</span>(key_value1[<span class="hljs-string">&quot;chg&quot;</span>])<br> <br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">len</span>(key_value1))<span class="hljs-comment"># 有几个键值对</span><br>key_value1[<span class="hljs-string">&quot;test2&quot;</span>]=<span class="hljs-number">4</span> <span class="hljs-comment"># 添加键值对</span><br><span class="hljs-built_in">print</span>(key_value1[<span class="hljs-string">&quot;test2&quot;</span>])<br> <br><span class="hljs-comment"># 判断是否存在</span><br><span class="hljs-keyword">if</span> <span class="hljs-string">&quot;xxxx&quot;</span> <span class="hljs-keyword">in</span> key_value1:<br>    <span class="hljs-built_in">print</span>(key_value1[<span class="hljs-string">&quot;chg&quot;</span>])<br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;don&#x27;t hava&quot;</span>)<br>    <br><span class="hljs-comment"># 加入元组的键值对，元组不可更改</span><br>key_value2=&#123;(<span class="hljs-number">1</span>,<span class="hljs-string">&quot;chg&quot;</span>):<span class="hljs-string">&quot;man&quot;</span>,<br>            (<span class="hljs-number">2</span>,<span class="hljs-string">&quot;test1&quot;</span>):<span class="hljs-string">&quot;man&quot;</span>,<br>            (<span class="hljs-number">3</span>,<span class="hljs-string">&quot;test2&quot;</span>):<span class="hljs-string">&quot;woman&quot;</span>&#125;<br> <br><span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> key_value2.items():<br>    <span class="hljs-built_in">print</span>(k)<br></code></pre></td></tr></table></figure><h2 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h2><ul><li><p><code>for</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 键值对和元组的使用</span><br>  <br><span class="hljs-comment"># 普通的键值对</span><br>key_value1=&#123;<span class="hljs-string">&quot;chg&quot;</span>:<span class="hljs-number">1</span>,<br>            <span class="hljs-string">&quot;zjy&quot;</span>:<span class="hljs-number">2</span>,<br>            <span class="hljs-string">&quot;test&quot;</span>:<span class="hljs-number">3</span>&#125;<br><span class="hljs-built_in">print</span>(key_value1[<span class="hljs-string">&quot;chg&quot;</span>])<br>  <br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">len</span>(key_value1))<span class="hljs-comment"># 有几个键值对</span><br>key_value1[<span class="hljs-string">&quot;test2&quot;</span>]=<span class="hljs-number">4</span> <span class="hljs-comment"># 添加键值对</span><br><span class="hljs-built_in">print</span>(key_value1[<span class="hljs-string">&quot;test2&quot;</span>])<br>  <br><span class="hljs-comment"># 判断是否存在</span><br><span class="hljs-keyword">if</span> <span class="hljs-string">&quot;xxxx&quot;</span> <span class="hljs-keyword">in</span> key_value1:<br>    <span class="hljs-built_in">print</span>(key_value1[<span class="hljs-string">&quot;chg&quot;</span>])<br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;don&#x27;t hava&quot;</span>)<br>  <br>  <br><span class="hljs-comment"># 使用循环打印键值对</span><br><span class="hljs-keyword">for</span> name <span class="hljs-keyword">in</span> key_value1.keys(): <span class="hljs-comment"># .key()方法是读取出所有的key。还有/value是读取所有值。使用.item是读取所有的键值对</span><br>    <span class="hljs-built_in">print</span>(name)<br>  <br>  <br><span class="hljs-keyword">for</span> key_value <span class="hljs-keyword">in</span> key_value1.items():<span class="hljs-comment">#读取出来是一个元组</span><br>    <span class="hljs-built_in">print</span>(key_value)<br><span class="hljs-keyword">for</span> num <span class="hljs-keyword">in</span> key_value1.values():<br>    <span class="hljs-built_in">print</span>(num)<br>    <br>   <br>total = <span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-number">101</span>): <span class="hljs-comment"># 范围是0~100，括号左边的取不到 range()还有第三个参数表示步长</span><br>    total+=i<br>  <br><span class="hljs-built_in">print</span>(total)<br>  <br></code></pre></td></tr></table></figure></li><li><p><code>while()</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python">is_true=<span class="hljs-literal">True</span><br>i=<span class="hljs-number">0</span><br><span class="hljs-keyword">while</span> is_true:<br>   i+=<span class="hljs-number">1</span><br>   <span class="hljs-keyword">if</span> i==<span class="hljs-number">100</span> :<br>       is_true=<span class="hljs-literal">False</span><br>  <br>  <br><span class="hljs-built_in">print</span>(i)<br></code></pre></td></tr></table></figure></li></ul><h2 id="格式化字符串"><a href="#格式化字符串" class="headerlink" title="格式化字符串"></a>格式化字符串</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">name=<span class="hljs-string">&quot;chg&quot;</span><br>school=<span class="hljs-string">&quot;CUIT&quot;</span><br>string_test1=<span class="hljs-string">&quot;&quot;&quot;&#123;name&#125; is a student in &#123;school&#125;&quot;&quot;&quot;</span>.<span class="hljs-built_in">format</span>(name=name,school=school)<br><span class="hljs-built_in">print</span>(string_test1)<br><br>string_test2=<span class="hljs-string">&quot;this is a test &#123;0&#125;&quot;</span>.<span class="hljs-built_in">format</span>(<span class="hljs-string">&quot;string&quot;</span>)<br><span class="hljs-built_in">print</span>(string_test2)<br></code></pre></td></tr></table></figure><p><img src="https://python-1317182407.cos.ap-chengdu.myqcloud.com/%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0image-20230714093050803.png" alt="image-20230714093050803"></p><h2 id="定义函数"><a href="#定义函数" class="headerlink" title="定义函数"></a>定义函数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">a,b</span>):<br>    <span class="hljs-keyword">return</span> a+b<br><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">int</span>(add(<span class="hljs-number">1</span>,<span class="hljs-number">3</span>)))<br></code></pre></td></tr></table></figure><h2 id="导入第三方库"><a href="#导入第三方库" class="headerlink" title="导入第三方库"></a>导入第三方库</h2><ol><li>通过<code>pypi.org</code>网站查看库</li><li>通过<code>pip install 仓库名</code>安装</li><li>使用<code>import</code>引入</li></ol><h2 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h2><ol><li><p>使用对象</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python">   <br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Student</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self,<span class="hljs-built_in">id</span>,name</span>):<br>        self.<span class="hljs-built_in">id</span>=<span class="hljs-built_in">id</span><br>        self.name=name<br>        self.grades=&#123;<span class="hljs-string">&quot;语文&quot;</span>:<span class="hljs-number">0</span>,<br>                     <span class="hljs-string">&quot;数学&quot;</span>:<span class="hljs-number">1</span>,<br>                     <span class="hljs-string">&quot;英语&quot;</span>:<span class="hljs-number">2</span>&#125;<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">set_grades</span>(<span class="hljs-params">self,course,grade</span>):<br>        <span class="hljs-keyword">if</span> course <span class="hljs-keyword">in</span> self.grades:<br>            self.grades[course]=grade<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">print_grades</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">for</span> course <span class="hljs-keyword">in</span> self.grades:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;course&#125;</span>的成绩是<span class="hljs-subst">&#123;self.grades[course]&#125;</span>&quot;</span>)<br>   <br>chg=Student(<span class="hljs-string">&quot;10010&quot;</span>,<span class="hljs-string">&quot;chg&quot;</span>)<br><span class="hljs-built_in">print</span>(chg.<span class="hljs-built_in">id</span>)<br><span class="hljs-built_in">print</span>(chg.grades)<br>chg.set_grades(<span class="hljs-string">&quot;数学&quot;</span>,<span class="hljs-number">122</span>)<br><span class="hljs-built_in">print</span>(chg.grades)<br>chg.print_grades()<br></code></pre></td></tr></table></figure></li><li><p>继承</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Student</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self,<span class="hljs-built_in">id</span>,name</span>):<br>        self.<span class="hljs-built_in">id</span>=<span class="hljs-built_in">id</span><br>        self.name=name<br>        self.grades=&#123;<span class="hljs-string">&quot;语文&quot;</span>:<span class="hljs-number">0</span>,<br>                     <span class="hljs-string">&quot;数学&quot;</span>:<span class="hljs-number">1</span>,<br>                     <span class="hljs-string">&quot;英语&quot;</span>:<span class="hljs-number">2</span>&#125;<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">set_grades</span>(<span class="hljs-params">self,course,grade</span>):<br>        <span class="hljs-keyword">if</span> course <span class="hljs-keyword">in</span> self.grades:<br>            self.grades[course]=grade<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">print_grades</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">for</span> course <span class="hljs-keyword">in</span> self.grades:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;course&#125;</span>的成绩是<span class="hljs-subst">&#123;self.grades[course]&#125;</span>&quot;</span>)<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">do_homework</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;做作业&quot;</span>)<br>   <br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Pupils</span>(<span class="hljs-title class_ inherited__">Student</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self,<span class="hljs-built_in">id</span>,name,other_subjects</span>):<br>        <span class="hljs-built_in">super</span>().__init__(<span class="hljs-built_in">id</span>,name)<span class="hljs-comment"># 调用构造函数</span><br>        self.other_subjects=other_subjects<br>   <br>   <br>   <br>   <br>chg=Student(<span class="hljs-string">&quot;10010&quot;</span>,<span class="hljs-string">&quot;chg&quot;</span>)<br><span class="hljs-built_in">print</span>(chg.<span class="hljs-built_in">id</span>)<br><span class="hljs-built_in">print</span>(chg.grades)<br>chg.set_grades(<span class="hljs-string">&quot;数学&quot;</span>,<span class="hljs-number">122</span>)<br><span class="hljs-built_in">print</span>(chg.grades)<br>chg.print_grades()<br>   <br>   <br><span class="hljs-comment"># 创建子类</span><br>test_student=Pupils(<span class="hljs-number">244</span>,<span class="hljs-string">&quot;test_student&quot;</span>,<span class="hljs-string">&quot;C语言&quot;</span>)<br><span class="hljs-built_in">print</span>(test_student.other_subjects)<br>   <br>   <br></code></pre></td></tr></table></figure></li></ol><h2 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h2><p>文件读取的模式有一下几种</p><p><img src="https://python-1317182407.cos.ap-chengdu.myqcloud.com/%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0image-20230714145153111.png" alt="image-20230714145153111"></p><ol><li><p>读文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs python">file=<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;C:\\Users\\12414\\Desktop\\test.txt&quot;</span>,<span class="hljs-string">&quot;r&quot;</span>,encoding=<span class="hljs-string">&quot;utf-8&quot;</span>)<br>   <br><span class="hljs-built_in">print</span>(file.readline())<span class="hljs-comment"># 读一行</span><br><span class="hljs-built_in">print</span>(file.read(<span class="hljs-number">10</span>))<br>file.seek(<span class="hljs-number">0</span>)<br>   <br>   <br><span class="hljs-comment"># 使用while读取文本</span><br><span class="hljs-built_in">str</span>=file.readline()<br><span class="hljs-keyword">while</span> <span class="hljs-built_in">str</span>!=<span class="hljs-string">&quot;&quot;</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-built_in">str</span>)<br>    <span class="hljs-built_in">str</span>=file.readline()<br>   <br><span class="hljs-comment"># 使用列表</span><br>file.seek(<span class="hljs-number">0</span>)<br>lines=file.readlines()<br><span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> lines:<br>    <span class="hljs-built_in">print</span>(line)<br>   <br>file.close()<br>   <br>   <br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;C:\\Users\\12414\\Desktop\\test.txt&quot;</span>,<span class="hljs-string">&quot;r&quot;</span>,encoding=<span class="hljs-string">&quot;utf-8&quot;</span>) <span class="hljs-keyword">as</span> file:<span class="hljs-comment"># 执行完后会自动关闭</span><br>    <span class="hljs-built_in">print</span>(file.readline())<br>   <br>   <br></code></pre></td></tr></table></figure></li><li><p>写文件</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs py"><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;C:\\Users\\12414\\Desktop\\test.txt&quot;</span>,<span class="hljs-string">&quot;w&quot;</span>,encoding=<span class="hljs-string">&quot;utf-8&quot;</span>) <span class="hljs-keyword">as</span> file:<span class="hljs-comment"># 遍历</span><br>    file.write(<span class="hljs-string">&quot;this a string&quot;</span>)<br>   <br>   <br></code></pre></td></tr></table></figure></li></ol><h1 id="本周总结"><a href="#本周总结" class="headerlink" title="本周总结"></a>本周总结</h1><p>本周学习内容相对来说比较少，主要原因集中在，放假朋友聚会和第一次接触内容，不太熟悉操作流程。</p>]]></content>
    
    
    
    <tags>
      
      <tag>研发周报</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>23718</title>
    <link href="/2023/07/18/%E6%89%93%E5%8D%A1/23-7-18/"/>
    <url>/2023/07/18/%E6%89%93%E5%8D%A1/23-7-18/</url>
    
    <content type="html"><![CDATA[<h2 id="上午"><a href="#上午" class="headerlink" title="上午"></a>上午</h2><ul><li><input disabled="" type="checkbox"> 晨跑</li><li><input disabled="" type="checkbox"> 练习英语</li><li><input disabled="" type="checkbox"> 学习win32汇编</li><li><input disabled="" type="checkbox"> 完成两道道数据结构的题</li></ul><h2 id="下午"><a href="#下午" class="headerlink" title="下午"></a>下午</h2><ul><li><input disabled="" type="checkbox"> 学习win32汇编</li><li><input disabled="" type="checkbox"> 学习算法，做题</li><li><input disabled="" type="checkbox"> 写排序的代码</li><li><input disabled="" type="checkbox"> 开展气象活动</li></ul><h2 id="晚上"><a href="#晚上" class="headerlink" title="晚上"></a>晚上</h2><ul><li><input disabled="" type="checkbox"> 学习qt框架</li><li><input disabled="" type="checkbox"> 总结</li><li><input disabled="" type="checkbox"> 写明日的计划</li></ul><h2 id="一日终结"><a href="#一日终结" class="headerlink" title="一日终结"></a>一日终结</h2>]]></content>
    
    
    
    <tags>
      
      <tag>打卡</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>23716</title>
    <link href="/2023/07/16/%E6%89%93%E5%8D%A1/23-7-16/"/>
    <url>/2023/07/16/%E6%89%93%E5%8D%A1/23-7-16/</url>
    
    <content type="html"><![CDATA[<h1 id="2023-7-16"><a href="#2023-7-16" class="headerlink" title="2023.7.16"></a>2023.7.16</h1><h2 id="上午"><a href="#上午" class="headerlink" title="上午"></a>上午</h2><ul><li><input checked="" disabled="" type="checkbox"> 练习英语</li><li><input checked="" disabled="" type="checkbox"> 学习win32汇编</li><li><input checked="" disabled="" type="checkbox"> 完成一道数据结构的题</li></ul><h2 id="下午"><a href="#下午" class="headerlink" title="下午"></a>下午</h2><ul><li><input checked="" disabled="" type="checkbox"> 学习win32汇编</li><li><input checked="" disabled="" type="checkbox"> 学习算法，做题</li><li><input checked="" disabled="" type="checkbox"> 写排序的代码</li></ul><h2 id="晚上"><a href="#晚上" class="headerlink" title="晚上"></a>晚上</h2><ul><li><input checked="" disabled="" type="checkbox"> 学习win32汇编</li><li><input checked="" disabled="" type="checkbox"> 学习qt框架</li><li><input checked="" disabled="" type="checkbox"> 总结</li><li><input checked="" disabled="" type="checkbox"> 写明日的计划</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>打卡</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>vs2019配置win32汇编环境</title>
    <link href="/2023/07/15/%E6%8A%80%E6%9C%AF%E9%9A%8F%E7%AC%94/vs2019%E9%85%8D%E7%BD%AEwin32%E6%B1%87%E7%BC%96/"/>
    <url>/2023/07/15/%E6%8A%80%E6%9C%AF%E9%9A%8F%E7%AC%94/vs2019%E9%85%8D%E7%BD%AEwin32%E6%B1%87%E7%BC%96/</url>
    
    <content type="html"><![CDATA[<h1 id="使用vs2019搭建win32汇编环境"><a href="#使用vs2019搭建win32汇编环境" class="headerlink" title="使用vs2019搭建win32汇编环境"></a>使用vs2019搭建win32汇编环境</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>写本博客的目的是记录搭建环境遇到的问题</p><h2 id="下载MSAM32"><a href="#下载MSAM32" class="headerlink" title="下载MSAM32"></a>下载MSAM32</h2><p>下载[点击这里](<a href="http://www.masm32.com/">MASM32 SDK</a>)</p><ol><li><p>Download</p><p><img src="https://pictuures-1317182407.cos.ap-chengdu.myqcloud.com/undefinedimage-20230715222749647.png" alt="image-20230715222749647"></p></li><li><p>随便选择一个下载</p><p><img src="https://pictuures-1317182407.cos.ap-chengdu.myqcloud.com/undefinedimage-20230715222908268.png" alt="image-20230715222908268"></p></li><li><p>点开</p><p><img src="https://pictuures-1317182407.cos.ap-chengdu.myqcloud.com/undefinedimage-20230715223032741.png" alt="image-20230715223032741"></p></li><li><p>使用360解压（狗头）</p><p><img src="https://pictuures-1317182407.cos.ap-chengdu.myqcloud.com/undefinedimage-20230715223116691.png" alt="image-20230715223116691"></p></li><li><p>点击install</p><p><img src="https://pictuures-1317182407.cos.ap-chengdu.myqcloud.com/undefinedimage-20230715223156640.png" alt="image-20230715223156640"></p></li><li><p>选择C盘，把C盘喂红</p><p><img src="https://pictuures-1317182407.cos.ap-chengdu.myqcloud.com/undefinedimage-20230715223338098.png" alt="image-20230715223338098"></p></li><li><p>后面就是确定和yes</p></li></ol><h2 id="vs2019"><a href="#vs2019" class="headerlink" title="vs2019"></a>vs2019</h2><p>请自行下载</p><h2 id="配置路径"><a href="#配置路径" class="headerlink" title="配置路径"></a>配置路径</h2><ol><li><p>打开vs2019 -&gt; 新建项</p><p><img src="https://pictuures-1317182407.cos.ap-chengdu.myqcloud.com/undefinedimage-20230715223503454.png" alt="image-20230715223503454"></p></li><li><p>选择空项目</p><p><img src="https://pictuures-1317182407.cos.ap-chengdu.myqcloud.com/undefinedimage-20230715223534962.png" alt="image-20230715223534962"></p></li><li><p>修改项目名称</p><p><img src="https://pictuures-1317182407.cos.ap-chengdu.myqcloud.com/undefinedimage-20230715223644549.png" alt="image-20230715223644549"></p></li><li><p>右键项目名称，按照以下步骤</p><p><img src="https://pictuures-1317182407.cos.ap-chengdu.myqcloud.com/undefinedimage-20230715224501649.png" alt="image-20230715224501649"></p><p><img src="https://pictuures-1317182407.cos.ap-chengdu.myqcloud.com/undefinedimage-20230715224532772.png" alt="image-20230715224532772"></p></li></ol><h2 id="新建项目"><a href="#新建项目" class="headerlink" title="新建项目"></a>新建项目</h2><p>注意使用asm后缀</p><p><img src="https://pictuures-1317182407.cos.ap-chengdu.myqcloud.com/undefinedimage-20230715230205264.png" alt="image-20230715230205264"></p><h2 id="添加include"><a href="#添加include" class="headerlink" title="添加include"></a>添加include</h2><p>接下来配置include路径</p><p><img src="https://pictuures-1317182407.cos.ap-chengdu.myqcloud.com/undefinedimage-20230715225848736.png" alt="image-20230715225848736"></p><p><img src="https://pictuures-1317182407.cos.ap-chengdu.myqcloud.com/undefined20200413202327305.png" alt="在这里插入图片描述"></p><p>记得加分号</p><p><img src="https://pictuures-1317182407.cos.ap-chengdu.myqcloud.com/undefinedimage-20230715230637167.png" alt="image-20230715230637167"></p><p><img src="https://pictuures-1317182407.cos.ap-chengdu.myqcloud.com/undefinedimage-20230715230809572.png" alt="image-20230715230809572"></p><h2 id="最后的最后如果发现ml-exe错误"><a href="#最后的最后如果发现ml-exe错误" class="headerlink" title="最后的最后如果发现ml.exe错误"></a>最后的最后如果发现ml.exe错误</h2><p>请你降低你的msvc的版本，最好低于14.26</p><p><img src="https://pictuures-1317182407.cos.ap-chengdu.myqcloud.com/undefinedimage-20230715230844141.png" alt="image-20230715230844141"></p><h2 id="如果都还是不行"><a href="#如果都还是不行" class="headerlink" title="如果都还是不行"></a>如果都还是不行</h2><p>那么请参考这个教程[<a href="https://blog.csdn.net/u010486308/article/details/105495848">(27条消息) 汇编环境搭建 Windows10 VS2019 MASM32_vs 编译masm报错_晨星_Star的博客-CSDN博客</a>]，注意一下创建的顺序</p><p>空解决方案-&gt;空项目-&gt;cpp项目（asm）后缀…..</p>]]></content>
    
    
    
    <tags>
      
      <tag>技术随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>free tlak</title>
    <link href="/2023/05/16/Englich/free-tlak/"/>
    <url>/2023/05/16/Englich/free-tlak/</url>
    
    <content type="html"><![CDATA[<h1 id="free-talk第三次补习"><a href="#free-talk第三次补习" class="headerlink" title="free talk第三次补习"></a>free talk第三次补习</h1><h2 id="文本的好处"><a href="#文本的好处" class="headerlink" title="文本的好处"></a>文本的好处</h2><ol><li>看得见的：<ul><li>发音，语调</li><li>节奏感（轻重缓急）</li><li>地道的表达</li><li>话题</li><li>语法</li></ul></li><li>看不见的：<ul><li>对话的逻辑</li><li>每个话题的观点</li></ul></li></ol><h2 id="最近的课程总结"><a href="#最近的课程总结" class="headerlink" title="最近的课程总结"></a>最近的课程总结</h2><ol><li><p>描述一个正在上和想上的课程</p><ul><li><p>是一个什么样的课（语言课，艺术课）</p></li><li><p>原因（<code>why did you learn this kind of class </code>）</p></li><li><p>收获成长，改变。</p><ul><li><p>怎么分享</p><p>A.<code>what kind of thing did you learn</code></p></li><li><p>原因</p><p>自信，独立</p><p>为了去参加的面试的时候，讲好英语对我的好处很多</p><p>让我在周末有事可以做</p><p>我未来很需要英语</p><p><code>more and more </code>,拥有一个特长找工作简单</p><p>感觉到自豪</p></li></ul></li></ul></li><li><p>常见的语法</p><ol><li></li></ol></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>English</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>java考试题</title>
    <link href="/2023/04/30/java%E8%80%83%E8%AF%95%E9%A2%98/java%E8%80%83%E8%AF%95%E9%A2%98/"/>
    <url>/2023/04/30/java%E8%80%83%E8%AF%95%E9%A2%98/java%E8%80%83%E8%AF%95%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h1 id="java"><a href="#java" class="headerlink" title="java"></a>java</h1><h2 id="各类字符数"><a href="#各类字符数" class="headerlink" title="各类字符数"></a><strong>各类字符数</strong></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.Scanner;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span>&#123;<br>        String str;<br>        <span class="hljs-type">Scanner</span> <span class="hljs-variable">input</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br>        str= input.nextLine();<br>        <span class="hljs-type">int</span> UpperNum=<span class="hljs-number">0</span>;<br>        <span class="hljs-type">int</span> lowerNum=<span class="hljs-number">0</span>;<br>        <span class="hljs-type">int</span> elseNum=<span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; str.length(); i++) &#123;<br>            <span class="hljs-keyword">if</span>(str.charAt(i)&gt;=<span class="hljs-string">&#x27;A&#x27;</span>&amp;&amp;str.charAt(i)&lt;=<span class="hljs-string">&#x27;Z&#x27;</span>)&#123;<br>                UpperNum++;<br>            &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(str.charAt(i)&gt;=<span class="hljs-string">&#x27;a&#x27;</span>&amp;&amp;str.charAt(i)&lt;=<span class="hljs-string">&#x27;z&#x27;</span>)&#123;<br>                lowerNum++;<br>            &#125;<span class="hljs-keyword">else</span> &#123;<br>                elseNum++;<br>            &#125;<br>        &#125;<br>        System.out.printf(<span class="hljs-string">&quot;%d\n%d\n%d&quot;</span>,UpperNum,lowerNum,elseNum);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><ul><li>注意判断方法</li></ul><h2 id="数据类型判断"><a href="#数据类型判断" class="headerlink" title="数据类型判断"></a><strong>数据类型判断</strong></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.Scanner;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span>&#123;<br>        <span class="hljs-type">Scanner</span> <span class="hljs-variable">input</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br>        <span class="hljs-type">int</span> flag=<span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">while</span>(input.hasNext())&#123;<br>            <span class="hljs-keyword">if</span>(flag!=<span class="hljs-number">0</span>)&#123;<br>                System.out.printf(<span class="hljs-string">&quot; &quot;</span>);<br>            &#125;<br>            <span class="hljs-keyword">if</span>(input.hasNextInt())&#123;<br>                System.out.printf(<span class="hljs-string">&quot;int&quot;</span>);<br>            &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(input.hasNextBoolean())&#123;<br>                System.out.printf(<span class="hljs-string">&quot;boolean&quot;</span>);<br>            &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(input.hasNextDouble())&#123;<br>                System.out.printf(<span class="hljs-string">&quot;double&quot;</span>);<br>            &#125;<span class="hljs-keyword">else</span> &#123;<br>                System.out.printf(<span class="hljs-string">&quot;String&quot;</span>);<br>            &#125;<br>            flag=<span class="hljs-number">1</span>;<br>            input.next();<br>        &#125;<br>        System.out.println();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>存在一点问题</li><li>记着需要读取</li></ul><h2 id="sdut-array2-4-打印“杨辉三角“-品中国数学史-增民族自豪感（1）"><a href="#sdut-array2-4-打印“杨辉三角“-品中国数学史-增民族自豪感（1）" class="headerlink" title="sdut-array2-4 打印“杨辉三角“ 品中国数学史 增民族自豪感（1）"></a><strong>sdut-array2-4 打印“杨辉三角“ 品中国数学史 增民族自豪感（1）</strong></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.Scanner;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">Scanner</span> <span class="hljs-variable">input</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br>        <span class="hljs-type">int</span> <span class="hljs-variable">size</span> <span class="hljs-operator">=</span> input.nextInt();<br>        <span class="hljs-type">int</span>[][] ints = <span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[size][size];<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; size; ++i) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">j</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; j &lt;= i; ++j) &#123;<br>                <span class="hljs-keyword">if</span> (j == i||j==<span class="hljs-number">0</span>) &#123;<br>                    ints[i][j]=<span class="hljs-number">1</span>;<br>                &#125;<span class="hljs-keyword">else</span>&#123;<br>                    ints[i][j]=ints[i-<span class="hljs-number">1</span>][j]+ints[i-<span class="hljs-number">1</span>][j-<span class="hljs-number">1</span>];<br>                &#125;<br>                System.out.printf(<span class="hljs-string">&quot;%-4d&quot;</span>,ints[i][j]);<br>            &#125;<br>            System.out.printf(<span class="hljs-string">&quot;\n&quot;</span>);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>采用二维数组存放，然后就可以直接用公式</li><li>注意<code>j</code>的循环必须要<code>&lt;=i</code></li></ul><h2 id="Shape类"><a href="#Shape类" class="headerlink" title="Shape类"></a><strong>Shape类</strong></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/* 你的代码被嵌在这里 */</span><br><span class="hljs-keyword">abstract</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Shape</span>&#123;<br>    <span class="hljs-keyword">abstract</span> <span class="hljs-type">double</span> <span class="hljs-title function_">getPerimeter</span><span class="hljs-params">()</span>;<br>    <span class="hljs-keyword">abstract</span> <span class="hljs-type">double</span> <span class="hljs-title function_">getArea</span><span class="hljs-params">()</span>;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Square</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Shape</span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-type">double</span> length;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">double</span> <span class="hljs-title function_">getPerimeter</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">4</span>*(length);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">double</span> <span class="hljs-title function_">getArea</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-keyword">return</span> length * length;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Square</span><span class="hljs-params">(<span class="hljs-type">double</span> a)</span>&#123;<br>        <span class="hljs-built_in">this</span>.length =a;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">double</span> <span class="hljs-title function_">getLength</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> length;<br>    &#125;<br>&#125;<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Rectangle</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Square</span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-type">double</span> wide;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Rectangle</span><span class="hljs-params">(<span class="hljs-type">double</span> length,<span class="hljs-type">double</span> wide)</span>&#123;<br>        <span class="hljs-built_in">super</span>(length);<br>        <span class="hljs-built_in">this</span>.wide=wide;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-type">double</span> <span class="hljs-title function_">getPerimeter</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">2</span>*(getLength()+wide);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">double</span> <span class="hljs-title function_">getArea</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-keyword">return</span> getLength()*wide;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Circle</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Shape</span>&#123;<br>    <span class="hljs-type">double</span> r;<br>    Circle(<span class="hljs-type">double</span> r)&#123;<br>        <span class="hljs-built_in">this</span>.r=r;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-type">double</span> <span class="hljs-title function_">getPerimeter</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">2</span>*r*Math.PI;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">double</span> <span class="hljs-title function_">getArea</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-keyword">return</span> Math.PI*r*r;<br>    &#125;<br><br>&#125;<br><br></code></pre></td></tr></table></figure><ul><li>注意构造函数的传参也是<code>double</code></li><li>注意长方形继承的是正方形</li></ul><h2 id="按照要求设计Stack（堆栈）类"><a href="#按照要求设计Stack（堆栈）类" class="headerlink" title="按照要求设计Stack（堆栈）类"></a><strong>按照要求设计Stack（堆栈）类</strong></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Stack</span> &#123;<br>    <span class="hljs-keyword">private</span> ArrayList&lt;String&gt; arrayList = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;&gt;();<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">push</span><span class="hljs-params">(String str)</span> &#123;<br>        arrayList.add(str);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">pop</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">if</span> (arrayList.isEmpty()) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            String str;<br>            str = arrayList.get(arrayList.size()-<span class="hljs-number">1</span>);<br>            arrayList.remove(arrayList.size()-<span class="hljs-number">1</span>);<br>            <span class="hljs-keyword">return</span> str;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">peek</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">if</span> (arrayList.isEmpty()) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>        &#125; <span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">return</span> arrayList.get(arrayList.size()-<span class="hljs-number">1</span>);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">getSize</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-keyword">return</span> arrayList.size();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">empty</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-keyword">return</span> arrayList.isEmpty();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>注意<code>ArrayList</code>的<code>get()</code>，<code>remove()</code>操作</li><li>判断是否存在用<code>isEmpty()</code></li></ul><h2 id="大小写转换"><a href="#大小写转换" class="headerlink" title="大小写转换"></a><strong>大小写转换</strong></h2><p>第一种方法，借助<code>StringBuffer</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">Filter</span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doFilter</span><span class="hljs-params">()</span>;<br>&#125;<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">WordFilter</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Filter</span>&#123;<br>    String word;<br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getWord</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-keyword">return</span> word;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setWord</span><span class="hljs-params">(String word)</span>&#123;<br>        <span class="hljs-built_in">this</span>.word=word;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">WordFilter</span><span class="hljs-params">(String word)</span>&#123;<br>        <span class="hljs-built_in">this</span>.word=word;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doFilter</span><span class="hljs-params">()</span>&#123;<br>        StringBuffer tem=<span class="hljs-keyword">new</span> <span class="hljs-title class_">StringBuffer</span>(<span class="hljs-string">&quot;&quot;</span>);<br>        word=word.toLowerCase();<br>        tem=tem.append(Character.toUpperCase(word.charAt(<span class="hljs-number">0</span>)));<br>        tem=tem.append(word.substring(<span class="hljs-number">0</span>));<br>        word= tem.toString();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><p>使用<code>StringBuffer</code>充当临时的介质</p><p>使用<code>append</code>函数链接</p></li><li><p><code>String</code> 取某个位置的字符使用，<code>charAt</code></p></li></ul><p>第二种方法，借助数组</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doFilter</span><span class="hljs-params">()</span>&#123;<br>    <span class="hljs-type">char</span>[] arr=word.toLowerCase().toCharArray();<br>    arr[<span class="hljs-number">0</span>]=(<span class="hljs-type">char</span>)(arr[<span class="hljs-number">0</span>]-<span class="hljs-string">&#x27;a&#x27;</span>+<span class="hljs-string">&#x27;A&#x27;</span>);<br>    word=<span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>(arr);<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>强制类型转换记得在前面加上(char)</li><li>不能直接<code>toString</code>必须创建一个新的</li></ul><h2 id="1-3-Java-OOP-定义接口Filter及其实现类UnicodeFilter"><a href="#1-3-Java-OOP-定义接口Filter及其实现类UnicodeFilter" class="headerlink" title="1-3 Java-OOP-定义接口Filter及其实现类UnicodeFilter"></a><strong>1-3 Java-OOP-定义接口Filter及其实现类UnicodeFilter</strong></h2><p>分数 30</p><p>全屏浏览题目</p><p>作者 索老师</p><p>单位 成都信息工程大学</p><h3 id="定义接口Filter"><a href="#定义接口Filter" class="headerlink" title="定义接口Filter"></a>定义接口Filter</h3><p>定义一个接口 Filter，表示过滤器，其定义的如下：</p><ul><li>Filter接口有一个抽象方法：public void doFilter(); 表示进行过滤操作。</li></ul><h3 id="定义UnicodeFilter类实现Filter接口："><a href="#定义UnicodeFilter类实现Filter接口：" class="headerlink" title="定义UnicodeFilter类实现Filter接口："></a>定义UnicodeFilter类实现Filter接口：</h3><ul><li>定义一个类：UnicodeFilter（Unicode码过滤器，该类要实现Filter接口，实现其doFilter()方法，实现将过滤字符串中的每个字符都转换为其Unicode码）；</li><li>对于UnicodeFilter类的要求如下：</li></ul><ol><li>一个String类型的成员变量 value，表示待进行过滤的字符串，并定义该变量的setter和getter方法；</li><li>带参数的构造方法，实例化过滤器对象时，按参数值初始化成员变量value的值；</li><li>实现doFilter方法，在实现的doFilter方法中，将value字符串中的每个字符都转变为对应的Uncode码；</li><li>对于UnicodeFilter类的更多接口细节可参看Main类中的代码。</li></ol><h3 id="提示："><a href="#提示：" class="headerlink" title="提示："></a>提示：</h3><ol><li><p>Unicode码的格式为“\uXXXX”，其中XXXX为16进制的unicode值，得到字符的16进制Unicode值可参看Interger类中的方法</p><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs fortran"><span class="hljs-keyword">Integer</span>.toHexString(<span class="hljs-built_in">char</span> c)<br></code></pre></td></tr></table></figure></li><li><p>Java中使用“\”需要用到转义的“\”</p></li></ol><pre><code class="java">import java.util.Scanner;public class Main &#123;    public static void main(String[] args) throws ClassNotFoundException &#123;        Class&lt;?&gt; clazz1 = Class.forName(&quot;Filter&quot;);        Class&lt;?&gt; clazz2 = Class.forName(&quot;UnicodeFilter&quot;);        System.out.println(clazz1.isInterface()+&quot; &quot;+clazz1.isAssignableFrom(clazz2));        Scanner scanner = new Scanner(System.in);        String input = scanner.nextLine();        UnicodeFilter filter = new UnicodeFilter(input);        System.out.println(&quot;原字符串是：&quot;+filter.getValue());        filter.doFilter();        System.out.println(&quot;字符串的Unicode码是：&quot;+filter.getValue());    &#125;&#125;interface Filter&#123;    public  void doFilter();&#125;class UnicodeFilter implements Filter&#123;    String value;    public UnicodeFilter(String value)&#123;        this.value=value;    &#125;    String getValue()&#123;        return value;    &#125;    void setValue(String value)&#123;        this.value=value;    &#125;    public void doFilter() &#123;        StringBuffer stringBuffer=new StringBuffer();        for(int i=0;i&lt;value.length();++i)&#123;            stringBuffer.append(&quot;\\u&quot;+Integer.toHexString(value.charAt(i)));        &#125;        value=new String(stringBuffer.toString());    &#125;&#125;</code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>java考试题</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>英语句积累</title>
    <link href="/2023/04/23/Englich/English/"/>
    <url>/2023/04/23/Englich/English/</url>
    
    <content type="html"><![CDATA[<ol><li>I always work from sun up to sun down and have tight schedule.</li><li>The relationship with my family became considerably cooler</li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>English</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>汉诺塔（java详解）</title>
    <link href="/2023/04/22/%E6%9C%89%E8%B6%A3%E9%97%AE%E9%A2%98/%E6%B1%89%E8%AF%BA%E5%A1%94%E9%97%AE%E9%A2%98/"/>
    <url>/2023/04/22/%E6%9C%89%E8%B6%A3%E9%97%AE%E9%A2%98/%E6%B1%89%E8%AF%BA%E5%A1%94%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h2 id="汉诺塔（java详解）"><a href="#汉诺塔（java详解）" class="headerlink" title="汉诺塔（java详解）"></a>汉诺塔（java详解）</h2><blockquote><p>汉诺塔（Tower of Hanoi），又称河内塔，是一个<strong>源于印度古老传说的益智玩具</strong>，由<a href="https://baike.sogou.com/lemma/ShowInnerLink.htm?lemmaId=43048">法国</a>数学家<a href="https://baike.sogou.com/lemma/ShowInnerLink.htm?lemmaId=10856155&ss_c=ssc.citiao.link">爱德华·卢卡斯</a>于1883年发明。[<a href="https://baike.sogou.com/v112111.htm#quote1">1]</a></p><p>汉诺塔的玩法是将一个木桩上的圆盘转移到另外一个木桩。移动规则：1、一次只能移动一个圆盘；2、每个桩上只有最顶层的圆盘可以移动，并且所移动的圆盘只能移到空木桩上或者它要比木桩顶层已存在的圆盘小。也就是说，您不能将大圆盘置于小圆盘之上。常见的汉诺塔n&#x3D;6~10，完成转移需要2n-1步。[<a href="https://baike.sogou.com/v112111.htm#quote1">1]</a></p><p>2023年3月，中国<a href="https://baike.sogou.com/lemma/ShowInnerLink.htm?lemmaId=90332">厦门市</a>的8岁男孩郭弘奕，以单手成功完成4层汉诺塔，用时4.305秒。经世界纪录认证（WRCA）官方审核，郭弘奕成功<strong>打破“最快时间完成4层汉诺塔（单手）”世界纪录</strong>，并颁发WRCA世界纪录认证证书，载入WRCA世界纪录</p></blockquote><p>建议试玩一下</p><p><a href="https://zhangxiaoleiwk.gitee.io/h.html">汉诺塔游戏 (gitee.io)</a></p><h2 id="采取递归的思想"><a href="#采取递归的思想" class="headerlink" title="采取递归的思想"></a>采取递归的思想</h2><h3 id="分问题"><a href="#分问题" class="headerlink" title="分问题"></a>分问题</h3><ol><li><p>大问题是如果将下面的移动到目标住</p></li><li><p>小问题无论上面的怎么移动的</p><p><img src="https://pictuures-1317182407.cos.ap-chengdu.myqcloud.com/%E6%B1%89%E8%AF%BA%E5%A1%94.jpg?q-sign-algorithm=sha1&q-ak=AKID7qYtcmaPDNWCKxozPPdDE0517O7ehey2M1NECRTwSWNxA4nHb-YQ9LX1f2pC2Db5&q-sign-time=1682487873;1682491473&q-key-time=1682487873;1682491473&q-header-list=host&q-url-param-list=&q-signature=50ec3af63cdd6cf9027d485573fecf691e8d103b&x-cos-security-token=R0yVxpoEtWEbY64skY2nK1JbodWjnMVa4ab6c42671f6150aa05f0be5d32cef89y2rMC0fuFrvgsrtQk3tJJTtJ-IGlAh7jnC6KvkLJLs39hkENmCkx0cukjZT_ICfqhZGsEB9_Zak7jUMt1oiDWoE_xgBbp0UtsLRAboL3ZCHbii3XR-esNLVFjPoWQ2TLtAp7atOXCv7-hL284gvsn2wxJU0egLeQ-msv1AAM0Cye3L3h5iKtePNVahVwSVk9"></p></li></ol><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.Scanner;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        Scanner input= <span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br>        su.func(input.nextInt(),<span class="hljs-string">&#x27;A&#x27;</span>,<span class="hljs-string">&#x27;B&#x27;</span>,<span class="hljs-string">&#x27;C&#x27;</span>);<span class="hljs-comment">//第一次C是目标住</span><br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">su</span>&#123;<br>    <span class="hljs-comment">/*public*/</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">func</span><span class="hljs-params">(<span class="hljs-type">int</span> num,<span class="hljs-type">char</span> A,<span class="hljs-type">char</span> B,<span class="hljs-type">char</span> C)</span>&#123;<br>        <span class="hljs-keyword">if</span>(num==<span class="hljs-number">1</span>)&#123;<br>            System.out.println(A+<span class="hljs-string">&quot;---&gt;&quot;</span>+C);<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            func(num-<span class="hljs-number">1</span>,A,C,B);<span class="hljs-comment">//不管上面的怎么移动</span><br>            System.out.println(A+<span class="hljs-string">&quot;---&gt;&quot;</span>+C);<br>            func(num-<span class="hljs-number">1</span>,B,A,C);<span class="hljs-comment">//这时候A是空的，所以是我们的工具柱</span><br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>问题分享</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
